{"ast":null,"code":"import _toArray from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _defineProperty from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Injectable, NgModule, NgZone, Inject, Input, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { BaseDirective2, StyleBuilder, StyleUtils, MediaMarshaller, CoreModule, LAYOUT_CONFIG, validateBasis } from '@angular/flex-layout/core';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/flex-layout/core';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nvar INLINE = 'inline';\n/** @type {?} */\n\nvar LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\n\nfunction buildLayoutCSS(value) {\n  var _validateValue = validateValue(value),\n      _validateValue2 = _slicedToArray(_validateValue, 3),\n      direction = _validateValue2[0],\n      wrap = _validateValue2[1],\n      isInline = _validateValue2[2];\n\n  return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateValue(value) {\n  value = value ? value.toLowerCase() : '';\n\n  var _value$split = value.split(' '),\n      _value$split2 = _slicedToArray(_value$split, 3),\n      direction = _value$split2[0],\n      wrap = _value$split2[1],\n      inline = _value$split2[2]; // First value must be the `flex-direction`\n\n\n  if (!LAYOUT_VALUES.find(\n  /**\n  * @param {?} x\n  * @return {?}\n  */\n\n  /**\n  * @param {?} x\n  * @return {?}\n  */\n  function (x) {\n    return x === direction;\n  })) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = inline !== INLINE ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isFlowHorizontal(value) {\n  var _validateValue3 = validateValue(value),\n      _validateValue4 = _slicedToArray(_validateValue3, 1),\n      flow = _validateValue4[0];\n\n  return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n      // All other values fallback to 'wrap'\n\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n\n  return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\n\n\nfunction buildCSS(direction) {\n  var wrap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var inline = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n\nvar LayoutStyleBuilder = /*@__PURE__*/function () {\n  var LayoutStyleBuilder = /*#__PURE__*/function (_StyleBuilder) {\n    _inherits(LayoutStyleBuilder, _StyleBuilder);\n\n    var _super = _createSuper(LayoutStyleBuilder);\n\n    function LayoutStyleBuilder() {\n      _classCallCheck(this, LayoutStyleBuilder);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(LayoutStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} input\n       * @return {?}\n       */\n      function buildStyles(input) {\n        return buildLayoutCSS(input);\n      }\n    }]);\n\n    return LayoutStyleBuilder;\n  }(StyleBuilder);\n\n  LayoutStyleBuilder.ɵfac = function LayoutStyleBuilder_Factory(t) {\n    return ɵLayoutStyleBuilder_BaseFactory(t || LayoutStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  LayoutStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function LayoutStyleBuilder_Factory() {\n      return new LayoutStyleBuilder();\n    },\n    token: LayoutStyleBuilder,\n    providedIn: \"root\"\n  });\n  return LayoutStyleBuilder;\n}();\n\nvar ɵLayoutStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(LayoutStyleBuilder);\n/** @type {?} */\n\nvar inputs = ['fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md', 'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md', 'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm', 'fxLayout.gt-md', 'fxLayout.gt-lg'];\n/** @type {?} */\n\nvar selector = \"\\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\\n  [fxLayout.gt-md], [fxLayout.gt-lg]\\n\";\n\nvar LayoutDirective = /*@__PURE__*/function () {\n  var LayoutDirective = /*#__PURE__*/function (_BaseDirective) {\n    _inherits(LayoutDirective, _BaseDirective);\n\n    var _super2 = _createSuper(LayoutDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function LayoutDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this;\n\n      _classCallCheck(this, LayoutDirective);\n\n      _this = _super2.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this.DIRECTIVE_KEY = 'layout';\n      _this.styleCache = layoutCache;\n\n      _this.init();\n\n      return _this;\n    }\n\n    return LayoutDirective;\n  }(BaseDirective2);\n\n  LayoutDirective.ɵfac = function LayoutDirective_Factory(t) {\n    return new (t || LayoutDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LayoutStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  LayoutDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: LayoutDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return LayoutDirective;\n}();\n\nvar DefaultLayoutDirective = /*@__PURE__*/function () {\n  var DefaultLayoutDirective = /*#__PURE__*/function (_LayoutDirective) {\n    _inherits(DefaultLayoutDirective, _LayoutDirective);\n\n    var _super3 = _createSuper(DefaultLayoutDirective);\n\n    function DefaultLayoutDirective() {\n      var _this2;\n\n      _classCallCheck(this, DefaultLayoutDirective);\n\n      _this2 = _super3.apply(this, arguments);\n      _this2.inputs = inputs;\n      return _this2;\n    }\n\n    return DefaultLayoutDirective;\n  }(LayoutDirective);\n\n  DefaultLayoutDirective.ɵfac = function DefaultLayoutDirective_Factory(t) {\n    return ɵDefaultLayoutDirective_BaseFactory(t || DefaultLayoutDirective);\n  };\n\n  DefaultLayoutDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultLayoutDirective,\n    selectors: [[\"\", \"fxLayout\", \"\"], [\"\", \"fxLayout.xs\", \"\"], [\"\", \"fxLayout.sm\", \"\"], [\"\", \"fxLayout.md\", \"\"], [\"\", \"fxLayout.lg\", \"\"], [\"\", \"fxLayout.xl\", \"\"], [\"\", \"fxLayout.lt-sm\", \"\"], [\"\", \"fxLayout.lt-md\", \"\"], [\"\", \"fxLayout.lt-lg\", \"\"], [\"\", \"fxLayout.lt-xl\", \"\"], [\"\", \"fxLayout.gt-xs\", \"\"], [\"\", \"fxLayout.gt-sm\", \"\"], [\"\", \"fxLayout.gt-md\", \"\"], [\"\", \"fxLayout.gt-lg\", \"\"]],\n    inputs: {\n      fxLayout: \"fxLayout\",\n      \"fxLayout.xs\": \"fxLayout.xs\",\n      \"fxLayout.sm\": \"fxLayout.sm\",\n      \"fxLayout.md\": \"fxLayout.md\",\n      \"fxLayout.lg\": \"fxLayout.lg\",\n      \"fxLayout.xl\": \"fxLayout.xl\",\n      \"fxLayout.lt-sm\": \"fxLayout.lt-sm\",\n      \"fxLayout.lt-md\": \"fxLayout.lt-md\",\n      \"fxLayout.lt-lg\": \"fxLayout.lt-lg\",\n      \"fxLayout.lt-xl\": \"fxLayout.lt-xl\",\n      \"fxLayout.gt-xs\": \"fxLayout.gt-xs\",\n      \"fxLayout.gt-sm\": \"fxLayout.gt-sm\",\n      \"fxLayout.gt-md\": \"fxLayout.gt-md\",\n      \"fxLayout.gt-lg\": \"fxLayout.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return DefaultLayoutDirective;\n}();\n\nvar ɵDefaultLayoutDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultLayoutDirective);\n/** @type {?} */\n\nvar layoutCache = new Map();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/layout-gap/layout-gap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\nvar LayoutGapStyleBuilder = /*@__PURE__*/function () {\n  var LayoutGapStyleBuilder = /*#__PURE__*/function (_StyleBuilder2) {\n    _inherits(LayoutGapStyleBuilder, _StyleBuilder2);\n\n    var _super4 = _createSuper(LayoutGapStyleBuilder);\n\n    /**\n     * @param {?} _styler\n     */\n    function LayoutGapStyleBuilder(_styler) {\n      var _this3;\n\n      _classCallCheck(this, LayoutGapStyleBuilder);\n\n      _this3 = _super4.call(this);\n      _this3._styler = _styler;\n      return _this3;\n    }\n    /**\n     * @param {?} gapValue\n     * @param {?} parent\n     * @return {?}\n     */\n\n\n    _createClass(LayoutGapStyleBuilder, [{\n      key: \"buildStyles\",\n      value: function buildStyles(gapValue, parent) {\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n          gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER)); // Add the margin to the host element\n\n          return buildGridMargin(gapValue, parent.directionality);\n        } else {\n          return {};\n        }\n      }\n      /**\n       * @param {?} gapValue\n       * @param {?} _styles\n       * @param {?} parent\n       * @return {?}\n       */\n\n    }, {\n      key: \"sideEffect\",\n      value: function sideEffect(gapValue, _styles, parent) {\n        /** @type {?} */\n        var items = parent.items;\n\n        if (gapValue.endsWith(GRID_SPECIFIER)) {\n          gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER)); // For each `element` children, set the padding\n\n          /** @type {?} */\n\n          var paddingStyles = buildGridPadding(gapValue, parent.directionality);\n\n          this._styler.applyStyleToElements(paddingStyles, parent.items);\n        } else {\n          /** @type {?} */\n          var lastItem =\n          /** @type {?} */\n          items.pop(); // For each `element` children EXCEPT the last,\n          // set the margin right/bottom styles...\n\n          /** @type {?} */\n\n          var gapCss = buildGapCSS(gapValue, parent);\n\n          this._styler.applyStyleToElements(gapCss, items); // Clear all gaps for all visible elements\n\n\n          this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n        }\n      }\n    }]);\n\n    return LayoutGapStyleBuilder;\n  }(StyleBuilder);\n\n  LayoutGapStyleBuilder.ɵfac = function LayoutGapStyleBuilder_Factory(t) {\n    return new (t || LayoutGapStyleBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.StyleUtils));\n  };\n  /** @nocollapse */\n\n\n  LayoutGapStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function LayoutGapStyleBuilder_Factory() {\n      return new LayoutGapStyleBuilder(ɵɵinject(StyleUtils));\n    },\n    token: LayoutGapStyleBuilder,\n    providedIn: \"root\"\n  });\n  return LayoutGapStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$1 = ['fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md', 'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md', 'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm', 'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'];\n/** @type {?} */\n\nvar selector$1 = \"\\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\\n\";\n\nvar LayoutGapDirective = /*@__PURE__*/function () {\n  var LayoutGapDirective = /*#__PURE__*/function (_BaseDirective2) {\n    _inherits(LayoutGapDirective, _BaseDirective2);\n\n    var _super5 = _createSuper(LayoutGapDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} zone\n     * @param {?} directionality\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function LayoutGapDirective(elRef, zone, directionality, styleUtils, styleBuilder, marshal) {\n      var _this4;\n\n      _classCallCheck(this, LayoutGapDirective);\n\n      _this4 = _super5.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this4.zone = zone;\n      _this4.directionality = directionality;\n      _this4.styleUtils = styleUtils;\n      _this4.layout = 'row'; // default flex-direction\n      // default flex-direction\n\n      _this4.DIRECTIVE_KEY = 'layout-gap';\n      _this4.observerSubject = new Subject();\n      /** @type {?} */\n\n      var extraTriggers = [_this4.directionality.change, _this4.observerSubject.asObservable()];\n\n      _this4.init(extraTriggers);\n\n      _this4.marshal.trackValue(_this4.nativeElement, 'layout').pipe(takeUntil(_this4.destroySubject)).subscribe(_this4.onLayoutChange.bind(_assertThisInitialized(_this4)));\n\n      return _this4;\n    }\n    /**\n     * Special accessor to query for all child 'element' nodes regardless of type, class, etc\n     * @protected\n     * @return {?}\n     */\n\n\n    _createClass(LayoutGapDirective, [{\n      key: \"childrenNodes\",\n      get: function get() {\n        /** @type {?} */\n        var obj = this.nativeElement.children;\n        /** @type {?} */\n\n        var buffer = []; // iterate backwards ensuring that length is an UInt32\n\n        for (var i = obj.length; i--;) {\n          buffer[i] = obj[i];\n        }\n\n        return buffer;\n      } // *********************************************\n      // Lifecycle Methods\n      // *********************************************\n\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        this.buildChildObservable();\n        this.triggerUpdate();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        _get(_getPrototypeOf(LayoutGapDirective.prototype), \"ngOnDestroy\", this).call(this);\n\n        if (this.observer) {\n          this.observer.disconnect();\n        }\n      } // *********************************************\n      // Protected methods\n      // *********************************************\n\n      /**\n       * Cache the parent container 'flex-direction' and update the 'margin' styles\n       * @protected\n       * @param {?} matcher\n       * @return {?}\n       */\n\n    }, {\n      key: \"onLayoutChange\",\n      value: function onLayoutChange(matcher) {\n        var _this5 = this;\n\n        /** @type {?} */\n        var layout = matcher.value; // Make sure to filter out 'wrap' option\n\n        /** @type {?} */\n\n        var direction = layout.split(' ');\n        this.layout = direction[0];\n\n        if (!LAYOUT_VALUES.find(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return x === _this5.layout;\n        })) {\n          this.layout = 'row';\n        }\n\n        this.triggerUpdate();\n      }\n      /**\n       *\n       * @protected\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"updateWithValue\",\n      value: function updateWithValue(value) {\n        var _this6 = this;\n\n        // Gather all non-hidden Element nodes\n\n        /** @type {?} */\n        var items = this.childrenNodes.filter(\n        /**\n        * @param {?} el\n        * @return {?}\n        */\n\n        /**\n        * @param {?} el\n        * @return {?}\n        */\n        function (el) {\n          return el.nodeType === 1 && _this6.willDisplay(el);\n        }).sort(\n        /**\n        * @param {?} a\n        * @param {?} b\n        * @return {?}\n        */\n        function (a, b) {\n          /** @type {?} */\n          var orderA = +_this6.styler.lookupStyle(a, 'order');\n          /** @type {?} */\n\n          var orderB = +_this6.styler.lookupStyle(b, 'order');\n\n          if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n            return 0;\n          } else {\n            return orderA > orderB ? 1 : -1;\n          }\n        });\n\n        if (items.length > 0) {\n          /** @type {?} */\n          var directionality = this.directionality.value;\n          /** @type {?} */\n\n          var layout = this.layout;\n\n          if (layout === 'row' && directionality === 'rtl') {\n            this.styleCache = layoutGapCacheRowRtl;\n          } else if (layout === 'row' && directionality !== 'rtl') {\n            this.styleCache = layoutGapCacheRowLtr;\n          } else if (layout === 'column' && directionality === 'rtl') {\n            this.styleCache = layoutGapCacheColumnRtl;\n          } else if (layout === 'column' && directionality !== 'rtl') {\n            this.styleCache = layoutGapCacheColumnLtr;\n          }\n\n          this.addStyles(value, {\n            directionality: directionality,\n            items: items,\n            layout: layout\n          });\n        }\n      }\n      /**\n       * We need to override clearStyles because in most cases mru isn't populated\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"clearStyles\",\n      value: function clearStyles() {\n        /** @type {?} */\n        var gridMode = Object.keys(this.mru).length > 0;\n        /** @type {?} */\n\n        var childrenStyle = gridMode ? 'padding' : getMarginType(this.directionality.value, this.layout); // If there are styles on the parent remove them\n\n        if (gridMode) {\n          _get(_getPrototypeOf(LayoutGapDirective.prototype), \"clearStyles\", this).call(this);\n        } // Then remove the children styles too\n\n\n        this.styleUtils.applyStyleToElements(_defineProperty({}, childrenStyle, ''), this.childrenNodes);\n      }\n      /**\n       * Determine if an element will show or hide based on current activation\n       * @protected\n       * @param {?} source\n       * @return {?}\n       */\n\n    }, {\n      key: \"willDisplay\",\n      value: function willDisplay(source) {\n        /** @type {?} */\n        var value = this.marshal.getValue(source, 'show-hide');\n        return value === true || value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none';\n      }\n      /**\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"buildChildObservable\",\n      value: function buildChildObservable() {\n        var _this7 = this;\n\n        this.zone.runOutsideAngular(\n        /**\n        * @return {?}\n        */\n        function () {\n          if (typeof MutationObserver !== 'undefined') {\n            _this7.observer = new MutationObserver(\n            /**\n            * @param {?} mutations\n            * @return {?}\n            */\n            function (mutations) {\n              /** @type {?} */\n              var validatedChanges =\n              /**\n              * @param {?} it\n              * @return {?}\n              */\n              function validatedChanges(it) {\n                return it.addedNodes && it.addedNodes.length > 0 || it.removedNodes && it.removedNodes.length > 0;\n              }; // update gap styles only for child 'added' or 'removed' events\n\n\n              if (mutations.some(validatedChanges)) {\n                _this7.observerSubject.next();\n              }\n            });\n\n            _this7.observer.observe(_this7.nativeElement, {\n              childList: true\n            });\n          }\n        });\n      }\n    }]);\n\n    return LayoutGapDirective;\n  }(BaseDirective2);\n\n  LayoutGapDirective.ɵfac = function LayoutGapDirective_Factory(t) {\n    return new (t || LayoutGapDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LayoutGapStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  LayoutGapDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: LayoutGapDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return LayoutGapDirective;\n}();\n\nvar DefaultLayoutGapDirective = /*@__PURE__*/function () {\n  var DefaultLayoutGapDirective = /*#__PURE__*/function (_LayoutGapDirective) {\n    _inherits(DefaultLayoutGapDirective, _LayoutGapDirective);\n\n    var _super6 = _createSuper(DefaultLayoutGapDirective);\n\n    function DefaultLayoutGapDirective() {\n      var _this8;\n\n      _classCallCheck(this, DefaultLayoutGapDirective);\n\n      _this8 = _super6.apply(this, arguments);\n      _this8.inputs = inputs$1;\n      return _this8;\n    }\n\n    return DefaultLayoutGapDirective;\n  }(LayoutGapDirective);\n\n  DefaultLayoutGapDirective.ɵfac = function DefaultLayoutGapDirective_Factory(t) {\n    return ɵDefaultLayoutGapDirective_BaseFactory(t || DefaultLayoutGapDirective);\n  };\n\n  DefaultLayoutGapDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultLayoutGapDirective,\n    selectors: [[\"\", \"fxLayoutGap\", \"\"], [\"\", \"fxLayoutGap.xs\", \"\"], [\"\", \"fxLayoutGap.sm\", \"\"], [\"\", \"fxLayoutGap.md\", \"\"], [\"\", \"fxLayoutGap.lg\", \"\"], [\"\", \"fxLayoutGap.xl\", \"\"], [\"\", \"fxLayoutGap.lt-sm\", \"\"], [\"\", \"fxLayoutGap.lt-md\", \"\"], [\"\", \"fxLayoutGap.lt-lg\", \"\"], [\"\", \"fxLayoutGap.lt-xl\", \"\"], [\"\", \"fxLayoutGap.gt-xs\", \"\"], [\"\", \"fxLayoutGap.gt-sm\", \"\"], [\"\", \"fxLayoutGap.gt-md\", \"\"], [\"\", \"fxLayoutGap.gt-lg\", \"\"]],\n    inputs: {\n      fxLayoutGap: \"fxLayoutGap\",\n      \"fxLayoutGap.xs\": \"fxLayoutGap.xs\",\n      \"fxLayoutGap.sm\": \"fxLayoutGap.sm\",\n      \"fxLayoutGap.md\": \"fxLayoutGap.md\",\n      \"fxLayoutGap.lg\": \"fxLayoutGap.lg\",\n      \"fxLayoutGap.xl\": \"fxLayoutGap.xl\",\n      \"fxLayoutGap.lt-sm\": \"fxLayoutGap.lt-sm\",\n      \"fxLayoutGap.lt-md\": \"fxLayoutGap.lt-md\",\n      \"fxLayoutGap.lt-lg\": \"fxLayoutGap.lt-lg\",\n      \"fxLayoutGap.lt-xl\": \"fxLayoutGap.lt-xl\",\n      \"fxLayoutGap.gt-xs\": \"fxLayoutGap.gt-xs\",\n      \"fxLayoutGap.gt-sm\": \"fxLayoutGap.gt-sm\",\n      \"fxLayoutGap.gt-md\": \"fxLayoutGap.gt-md\",\n      \"fxLayoutGap.gt-lg\": \"fxLayoutGap.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return DefaultLayoutGapDirective;\n}();\n\nvar ɵDefaultLayoutGapDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultLayoutGapDirective);\n/** @type {?} */\n\nvar layoutGapCacheRowRtl = new Map();\n/** @type {?} */\n\nvar layoutGapCacheColumnRtl = new Map();\n/** @type {?} */\n\nvar layoutGapCacheRowLtr = new Map();\n/** @type {?} */\n\nvar layoutGapCacheColumnLtr = new Map();\n/** @type {?} */\n\nvar GRID_SPECIFIER = ' grid';\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\n\nfunction buildGridPadding(value, directionality) {\n  var _value$split3 = value.split(' '),\n      _value$split4 = _slicedToArray(_value$split3, 2),\n      between = _value$split4[0],\n      below = _value$split4[1];\n  /** @type {?} */\n\n\n  var bottom = below || between;\n  /** @type {?} */\n\n  var paddingRight = '0px';\n  /** @type {?} */\n\n  var paddingBottom = bottom;\n  /** @type {?} */\n\n  var paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = between;\n  } else {\n    paddingRight = between;\n  }\n\n  return {\n    'padding': \"0px \".concat(paddingRight, \" \").concat(paddingBottom, \" \").concat(paddingLeft)\n  };\n}\n/**\n * @param {?} value\n * @param {?} directionality\n * @return {?}\n */\n\n\nfunction buildGridMargin(value, directionality) {\n  var _value$split5 = value.split(' '),\n      _value$split6 = _slicedToArray(_value$split5, 2),\n      between = _value$split6[0],\n      below = _value$split6[1];\n  /** @type {?} */\n\n\n  var bottom = below || between;\n  /** @type {?} */\n\n  var minus =\n  /**\n  * @param {?} str\n  * @return {?}\n  */\n  function minus(str) {\n    return \"-\".concat(str);\n  };\n  /** @type {?} */\n\n\n  var marginRight = '0px';\n  /** @type {?} */\n\n  var marginBottom = minus(bottom);\n  /** @type {?} */\n\n  var marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = minus(between);\n  } else {\n    marginRight = minus(between);\n  }\n\n  return {\n    'margin': \"0px \".concat(marginRight, \" \").concat(marginBottom, \" \").concat(marginLeft)\n  };\n}\n/**\n * @param {?} directionality\n * @param {?} layout\n * @return {?}\n */\n\n\nfunction getMarginType(directionality, layout) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n\n    case 'column-reverse':\n      return 'margin-top';\n\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n\n    default:\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n/**\n * @param {?} gapValue\n * @param {?} parent\n * @return {?}\n */\n\n\nfunction buildGapCSS(gapValue, parent) {\n  /** @type {?} */\n  var key = getMarginType(parent.directionality, parent.layout);\n  /** @type {?} */\n\n  var margins = Object.assign({}, CLEAR_MARGIN_CSS);\n  margins[key] = gapValue;\n  return margins;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\n\n\nfunction extendObject(dest) {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n\n    if (source != null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n\nvar FlexStyleBuilder = /*@__PURE__*/function () {\n  var FlexStyleBuilder = /*#__PURE__*/function (_StyleBuilder3) {\n    _inherits(FlexStyleBuilder, _StyleBuilder3);\n\n    var _super7 = _createSuper(FlexStyleBuilder);\n\n    /**\n     * @param {?} layoutConfig\n     */\n    function FlexStyleBuilder(layoutConfig) {\n      var _this9;\n\n      _classCallCheck(this, FlexStyleBuilder);\n\n      _this9 = _super7.call(this);\n      _this9.layoutConfig = layoutConfig;\n      return _this9;\n    }\n    /**\n     * @param {?} input\n     * @param {?} parent\n     * @return {?}\n     */\n\n\n    _createClass(FlexStyleBuilder, [{\n      key: \"buildStyles\",\n      value: function buildStyles(input, parent) {\n        var _input$split = input.split(' '),\n            _input$split2 = _toArray(_input$split),\n            grow = _input$split2[0],\n            shrink = _input$split2[1],\n            basisParts = _input$split2.slice(2);\n        /** @type {?} */\n\n\n        var basis = basisParts.join(' '); // The flex-direction of this element's flex container. Defaults to 'row'.\n\n        /** @type {?} */\n\n        var direction = parent.direction.indexOf('column') > -1 ? 'column' : 'row';\n        /** @type {?} */\n\n        var max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n        /** @type {?} */\n\n        var min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n        /** @type {?} */\n\n        var hasCalc = String(basis).indexOf('calc') > -1;\n        /** @type {?} */\n\n        var usingCalc = hasCalc || basis === 'auto';\n        /** @type {?} */\n\n        var isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n        /** @type {?} */\n\n        var hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 || String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 || String(basis).indexOf('vh') > -1;\n        /** @type {?} */\n\n        var isValue = hasCalc || hasUnits;\n        grow = grow == '0' ? 0 : grow;\n        shrink = shrink == '0' ? 0 : shrink; // make box inflexible when shrink and grow are both zero\n        // should not set a min when the grow is zero\n        // should not set a max when the shrink is zero\n\n        /** @type {?} */\n\n        var isFixed = !grow && !shrink;\n        /** @type {?} */\n\n        var css = {}; // flex-basis allows you to specify the initial/starting main-axis size of the element,\n        // before anything else is computed. It can either be a percentage or an absolute value.\n        // It is, however, not the breaking point for flex-grow/shrink properties\n        //\n        // flex-grow can be seen as this:\n        //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n        //   1: (Default value). Stretch; will be the same size to all other flex items on\n        //       the same row since they have a default value of 1.\n        //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n        //      with 'flex-grow: 1' on the same row.\n        // Use `null` to clear existing styles.\n\n        /** @type {?} */\n\n        var clearStyles = {\n          'max-width': null,\n          'max-height': null,\n          'min-width': null,\n          'min-height': null\n        };\n\n        switch (basis || '') {\n          case '':\n            /** @type {?} */\n            var useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n            basis = direction === 'row' ? '0%' : useColumnBasisZero ? '0.000000001px' : 'auto';\n            break;\n\n          case 'initial': // default\n\n          case 'nogrow':\n            grow = 0;\n            basis = 'auto';\n            break;\n\n          case 'grow':\n            basis = '100%';\n            break;\n\n          case 'noshrink':\n            shrink = 0;\n            basis = 'auto';\n            break;\n\n          case 'auto':\n            break;\n\n          case 'none':\n            grow = 0;\n            shrink = 0;\n            basis = 'auto';\n            break;\n\n          default:\n            // Defaults to percentage sizing unless `px` is explicitly set\n            if (!isValue && !isPercent && !isNaN(\n            /** @type {?} */\n            basis)) {\n              basis = basis + '%';\n            } // Fix for issue 280\n\n\n            if (basis === '0%') {\n              isValue = true;\n            }\n\n            if (basis === '0px') {\n              basis = '0%';\n            } // fix issue #5345\n\n\n            if (hasCalc) {\n              css = extendObject(clearStyles, {\n                'flex-grow': grow,\n                'flex-shrink': shrink,\n                'flex-basis': isValue ? basis : '100%'\n              });\n            } else {\n              css = extendObject(clearStyles, {\n                'flex': \"\".concat(grow, \" \").concat(shrink, \" \").concat(isValue ? basis : '100%')\n              });\n            }\n\n            break;\n        }\n\n        if (!(css['flex'] || css['flex-grow'])) {\n          if (hasCalc) {\n            css = extendObject(clearStyles, {\n              'flex-grow': grow,\n              'flex-shrink': shrink,\n              'flex-basis': basis\n            });\n          } else {\n            css = extendObject(clearStyles, {\n              'flex': \"\".concat(grow, \" \").concat(shrink, \" \").concat(basis)\n            });\n          }\n        } // Fix for issues 277, 534, and 728\n\n\n        if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n          css[min] = isFixed || isValue && grow ? basis : null;\n          css[max] = isFixed || !usingCalc && shrink ? basis : null;\n        } // Fix for issue 528\n\n\n        if (!css[min] && !css[max]) {\n          if (hasCalc) {\n            css = extendObject(clearStyles, {\n              'flex-grow': grow,\n              'flex-shrink': shrink,\n              'flex-basis': basis\n            });\n          } else {\n            css = extendObject(clearStyles, {\n              'flex': \"\".concat(grow, \" \").concat(shrink, \" \").concat(basis)\n            });\n          }\n        } else {\n          // Fix for issue 660\n          if (parent.hasWrap) {\n            css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ? hasCalc ? css[max] : \"\".concat(grow, \" \").concat(shrink, \" \").concat(css[max]) : hasCalc ? css[min] : \"\".concat(grow, \" \").concat(shrink, \" \").concat(css[min]);\n          }\n        }\n\n        return (\n          /** @type {?} */\n          extendObject(css, {\n            'box-sizing': 'border-box'\n          })\n        );\n      }\n    }]);\n\n    return FlexStyleBuilder;\n  }(StyleBuilder);\n\n  FlexStyleBuilder.ɵfac = function FlexStyleBuilder_Factory(t) {\n    return new (t || FlexStyleBuilder)(ɵngcc0.ɵɵinject(LAYOUT_CONFIG));\n  };\n  /** @nocollapse */\n\n\n  FlexStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexStyleBuilder_Factory() {\n      return new FlexStyleBuilder(ɵɵinject(LAYOUT_CONFIG));\n    },\n    token: FlexStyleBuilder,\n    providedIn: \"root\"\n  });\n  return FlexStyleBuilder;\n}();\n/** @type {?} */\n\n\nvar inputs$2 = ['fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md', 'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md', 'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm', 'fxFlex.gt-md', 'fxFlex.gt-lg'];\n/** @type {?} */\n\nvar selector$2 = \"\\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\\n  [fxFlex.gt-md], [fxFlex.gt-lg]\\n\";\n\nvar FlexDirective = /*@__PURE__*/function () {\n  var FlexDirective = /*#__PURE__*/function (_BaseDirective3) {\n    _inherits(FlexDirective, _BaseDirective3);\n\n    var _super8 = _createSuper(FlexDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} layoutConfig\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexDirective(elRef, styleUtils, layoutConfig, styleBuilder, marshal) {\n      var _this10;\n\n      _classCallCheck(this, FlexDirective);\n\n      _this10 = _super8.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this10.layoutConfig = layoutConfig;\n      _this10.marshal = marshal;\n      _this10.DIRECTIVE_KEY = 'flex';\n      _this10.direction = undefined;\n      _this10.wrap = undefined;\n      _this10.flexGrow = '1';\n      _this10.flexShrink = '1';\n\n      _this10.init();\n\n      return _this10;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(FlexDirective, [{\n      key: \"shrink\",\n      get: function get() {\n        return this.flexShrink;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this.flexShrink = value || '1';\n        this.triggerReflow();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"grow\",\n      get: function get() {\n        return this.flexGrow;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this.flexGrow = value || '1';\n        this.triggerReflow();\n      }\n      /**\n       * @return {?}\n       */\n\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        if (this.parentElement) {\n          this.marshal.trackValue(this.parentElement, 'layout').pipe(takeUntil(this.destroySubject)).subscribe(this.onLayoutChange.bind(this));\n          this.marshal.trackValue(this.nativeElement, 'layout-align').pipe(takeUntil(this.destroySubject)).subscribe(this.triggerReflow.bind(this));\n        }\n      }\n      /**\n       * Caches the parent container's 'flex-direction' and updates the element's style.\n       * Used as a handler for layout change events from the parent flex container.\n       * @protected\n       * @param {?} matcher\n       * @return {?}\n       */\n\n    }, {\n      key: \"onLayoutChange\",\n      value: function onLayoutChange(matcher) {\n        /** @type {?} */\n        var layout = matcher.value;\n        /** @type {?} */\n\n        var layoutParts = layout.split(' ');\n        this.direction = layoutParts[0];\n        this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n        this.triggerUpdate();\n      }\n      /**\n       * Input to this is exclusively the basis input value\n       * @protected\n       * @param {?} value\n       * @return {?}\n       */\n\n    }, {\n      key: \"updateWithValue\",\n      value: function updateWithValue(value) {\n        /** @type {?} */\n        var addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n\n        if (this.direction === undefined) {\n          this.direction = this.getFlexFlowDirection(\n          /** @type {?} */\n          this.parentElement, addFlexToParent);\n        }\n\n        if (this.wrap === undefined) {\n          this.wrap = this.hasWrap(\n          /** @type {?} */\n          this.parentElement);\n        }\n        /** @type {?} */\n\n\n        var direction = this.direction;\n        /** @type {?} */\n\n        var isHorizontal = direction.startsWith('row');\n        /** @type {?} */\n\n        var hasWrap = this.wrap;\n\n        if (isHorizontal && hasWrap) {\n          this.styleCache = flexRowWrapCache;\n        } else if (isHorizontal && !hasWrap) {\n          this.styleCache = flexRowCache;\n        } else if (!isHorizontal && hasWrap) {\n          this.styleCache = flexColumnWrapCache;\n        } else if (!isHorizontal && !hasWrap) {\n          this.styleCache = flexColumnCache;\n        }\n        /** @type {?} */\n\n\n        var basis = String(value).replace(';', '');\n        /** @type {?} */\n\n        var parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n        this.addStyles(parts.join(' '), {\n          direction: direction,\n          hasWrap: hasWrap\n        });\n      }\n      /**\n       * Trigger a style reflow, usually based on a shrink/grow input event\n       * @protected\n       * @return {?}\n       */\n\n    }, {\n      key: \"triggerReflow\",\n      value: function triggerReflow() {\n        /** @type {?} */\n        var activatedValue = this.activatedValue;\n\n        if (activatedValue !== undefined) {\n          /** @type {?} */\n          var parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n          this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n        }\n      }\n    }]);\n\n    return FlexDirective;\n  }(BaseDirective2);\n\n  FlexDirective.ɵfac = function FlexDirective_Factory(t) {\n    return new (t || FlexDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LAYOUT_CONFIG), ɵngcc0.ɵɵdirectiveInject(FlexStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexDirective,\n    inputs: {\n      shrink: [\"fxShrink\", \"shrink\"],\n      grow: [\"fxGrow\", \"grow\"]\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return FlexDirective;\n}();\n\nvar DefaultFlexDirective = /*@__PURE__*/function () {\n  var DefaultFlexDirective = /*#__PURE__*/function (_FlexDirective) {\n    _inherits(DefaultFlexDirective, _FlexDirective);\n\n    var _super9 = _createSuper(DefaultFlexDirective);\n\n    function DefaultFlexDirective() {\n      var _this11;\n\n      _classCallCheck(this, DefaultFlexDirective);\n\n      _this11 = _super9.apply(this, arguments);\n      _this11.inputs = inputs$2;\n      return _this11;\n    }\n\n    return DefaultFlexDirective;\n  }(FlexDirective);\n\n  DefaultFlexDirective.ɵfac = function DefaultFlexDirective_Factory(t) {\n    return ɵDefaultFlexDirective_BaseFactory(t || DefaultFlexDirective);\n  };\n\n  DefaultFlexDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexDirective,\n    selectors: [[\"\", \"fxFlex\", \"\"], [\"\", \"fxFlex.xs\", \"\"], [\"\", \"fxFlex.sm\", \"\"], [\"\", \"fxFlex.md\", \"\"], [\"\", \"fxFlex.lg\", \"\"], [\"\", \"fxFlex.xl\", \"\"], [\"\", \"fxFlex.lt-sm\", \"\"], [\"\", \"fxFlex.lt-md\", \"\"], [\"\", \"fxFlex.lt-lg\", \"\"], [\"\", \"fxFlex.lt-xl\", \"\"], [\"\", \"fxFlex.gt-xs\", \"\"], [\"\", \"fxFlex.gt-sm\", \"\"], [\"\", \"fxFlex.gt-md\", \"\"], [\"\", \"fxFlex.gt-lg\", \"\"]],\n    inputs: {\n      fxFlex: \"fxFlex\",\n      \"fxFlex.xs\": \"fxFlex.xs\",\n      \"fxFlex.sm\": \"fxFlex.sm\",\n      \"fxFlex.md\": \"fxFlex.md\",\n      \"fxFlex.lg\": \"fxFlex.lg\",\n      \"fxFlex.xl\": \"fxFlex.xl\",\n      \"fxFlex.lt-sm\": \"fxFlex.lt-sm\",\n      \"fxFlex.lt-md\": \"fxFlex.lt-md\",\n      \"fxFlex.lt-lg\": \"fxFlex.lt-lg\",\n      \"fxFlex.lt-xl\": \"fxFlex.lt-xl\",\n      \"fxFlex.gt-xs\": \"fxFlex.gt-xs\",\n      \"fxFlex.gt-sm\": \"fxFlex.gt-sm\",\n      \"fxFlex.gt-md\": \"fxFlex.gt-md\",\n      \"fxFlex.gt-lg\": \"fxFlex.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return DefaultFlexDirective;\n}();\n\nvar ɵDefaultFlexDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexDirective);\n/** @type {?} */\n\nvar flexRowCache = new Map();\n/** @type {?} */\n\nvar flexColumnCache = new Map();\n/** @type {?} */\n\nvar flexRowWrapCache = new Map();\n/** @type {?} */\n\nvar flexColumnWrapCache = new Map();\n\nvar FlexOrderStyleBuilder = /*@__PURE__*/function () {\n  var FlexOrderStyleBuilder = /*#__PURE__*/function (_StyleBuilder4) {\n    _inherits(FlexOrderStyleBuilder, _StyleBuilder4);\n\n    var _super10 = _createSuper(FlexOrderStyleBuilder);\n\n    function FlexOrderStyleBuilder() {\n      _classCallCheck(this, FlexOrderStyleBuilder);\n\n      return _super10.apply(this, arguments);\n    }\n\n    _createClass(FlexOrderStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      function buildStyles(value) {\n        return {\n          order: value && parseInt(value, 10) || ''\n        };\n      }\n    }]);\n\n    return FlexOrderStyleBuilder;\n  }(StyleBuilder);\n\n  FlexOrderStyleBuilder.ɵfac = function FlexOrderStyleBuilder_Factory(t) {\n    return ɵFlexOrderStyleBuilder_BaseFactory(t || FlexOrderStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexOrderStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexOrderStyleBuilder_Factory() {\n      return new FlexOrderStyleBuilder();\n    },\n    token: FlexOrderStyleBuilder,\n    providedIn: \"root\"\n  });\n  return FlexOrderStyleBuilder;\n}();\n\nvar ɵFlexOrderStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexOrderStyleBuilder);\n/** @type {?} */\n\nvar inputs$3 = ['fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md', 'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md', 'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm', 'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'];\n/** @type {?} */\n\nvar selector$3 = \"\\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\\n\";\n\nvar FlexOrderDirective = /*@__PURE__*/function () {\n  var FlexOrderDirective = /*#__PURE__*/function (_BaseDirective4) {\n    _inherits(FlexOrderDirective, _BaseDirective4);\n\n    var _super11 = _createSuper(FlexOrderDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexOrderDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this12;\n\n      _classCallCheck(this, FlexOrderDirective);\n\n      _this12 = _super11.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this12.DIRECTIVE_KEY = 'flex-order';\n      _this12.styleCache = flexOrderCache;\n\n      _this12.init();\n\n      return _this12;\n    }\n\n    return FlexOrderDirective;\n  }(BaseDirective2);\n\n  FlexOrderDirective.ɵfac = function FlexOrderDirective_Factory(t) {\n    return new (t || FlexOrderDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(FlexOrderStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexOrderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexOrderDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return FlexOrderDirective;\n}();\n/** @type {?} */\n\n\nvar flexOrderCache = new Map();\n\nvar DefaultFlexOrderDirective = /*@__PURE__*/function () {\n  var DefaultFlexOrderDirective = /*#__PURE__*/function (_FlexOrderDirective) {\n    _inherits(DefaultFlexOrderDirective, _FlexOrderDirective);\n\n    var _super12 = _createSuper(DefaultFlexOrderDirective);\n\n    function DefaultFlexOrderDirective() {\n      var _this13;\n\n      _classCallCheck(this, DefaultFlexOrderDirective);\n\n      _this13 = _super12.apply(this, arguments);\n      _this13.inputs = inputs$3;\n      return _this13;\n    }\n\n    return DefaultFlexOrderDirective;\n  }(FlexOrderDirective);\n\n  DefaultFlexOrderDirective.ɵfac = function DefaultFlexOrderDirective_Factory(t) {\n    return ɵDefaultFlexOrderDirective_BaseFactory(t || DefaultFlexOrderDirective);\n  };\n\n  DefaultFlexOrderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexOrderDirective,\n    selectors: [[\"\", \"fxFlexOrder\", \"\"], [\"\", \"fxFlexOrder.xs\", \"\"], [\"\", \"fxFlexOrder.sm\", \"\"], [\"\", \"fxFlexOrder.md\", \"\"], [\"\", \"fxFlexOrder.lg\", \"\"], [\"\", \"fxFlexOrder.xl\", \"\"], [\"\", \"fxFlexOrder.lt-sm\", \"\"], [\"\", \"fxFlexOrder.lt-md\", \"\"], [\"\", \"fxFlexOrder.lt-lg\", \"\"], [\"\", \"fxFlexOrder.lt-xl\", \"\"], [\"\", \"fxFlexOrder.gt-xs\", \"\"], [\"\", \"fxFlexOrder.gt-sm\", \"\"], [\"\", \"fxFlexOrder.gt-md\", \"\"], [\"\", \"fxFlexOrder.gt-lg\", \"\"]],\n    inputs: {\n      fxFlexOrder: \"fxFlexOrder\",\n      \"fxFlexOrder.xs\": \"fxFlexOrder.xs\",\n      \"fxFlexOrder.sm\": \"fxFlexOrder.sm\",\n      \"fxFlexOrder.md\": \"fxFlexOrder.md\",\n      \"fxFlexOrder.lg\": \"fxFlexOrder.lg\",\n      \"fxFlexOrder.xl\": \"fxFlexOrder.xl\",\n      \"fxFlexOrder.lt-sm\": \"fxFlexOrder.lt-sm\",\n      \"fxFlexOrder.lt-md\": \"fxFlexOrder.lt-md\",\n      \"fxFlexOrder.lt-lg\": \"fxFlexOrder.lt-lg\",\n      \"fxFlexOrder.lt-xl\": \"fxFlexOrder.lt-xl\",\n      \"fxFlexOrder.gt-xs\": \"fxFlexOrder.gt-xs\",\n      \"fxFlexOrder.gt-sm\": \"fxFlexOrder.gt-sm\",\n      \"fxFlexOrder.gt-md\": \"fxFlexOrder.gt-md\",\n      \"fxFlexOrder.gt-lg\": \"fxFlexOrder.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return DefaultFlexOrderDirective;\n}();\n\nvar ɵDefaultFlexOrderDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexOrderDirective);\n\nvar FlexOffsetStyleBuilder = /*@__PURE__*/function () {\n  var FlexOffsetStyleBuilder = /*#__PURE__*/function (_StyleBuilder5) {\n    _inherits(FlexOffsetStyleBuilder, _StyleBuilder5);\n\n    var _super13 = _createSuper(FlexOffsetStyleBuilder);\n\n    function FlexOffsetStyleBuilder() {\n      _classCallCheck(this, FlexOffsetStyleBuilder);\n\n      return _super13.apply(this, arguments);\n    }\n\n    _createClass(FlexOffsetStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} offset\n       * @param {?} parent\n       * @return {?}\n       */\n      function buildStyles(offset, parent) {\n        if (offset === '') {\n          offset = '0';\n        }\n        /** @type {?} */\n\n\n        var isPercent = String(offset).indexOf('%') > -1;\n        /** @type {?} */\n\n        var isPx = String(offset).indexOf('px') > -1;\n\n        if (!isPx && !isPercent && !isNaN(+offset)) {\n          offset = offset + '%';\n        }\n        /** @type {?} */\n\n\n        var horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n        /** @type {?} */\n\n        var styles = isFlowHorizontal(parent.layout) ? _defineProperty({}, horizontalLayoutKey, \"\".concat(offset)) : {\n          'margin-top': \"\".concat(offset)\n        };\n        return styles;\n      }\n    }]);\n\n    return FlexOffsetStyleBuilder;\n  }(StyleBuilder);\n\n  FlexOffsetStyleBuilder.ɵfac = function FlexOffsetStyleBuilder_Factory(t) {\n    return ɵFlexOffsetStyleBuilder_BaseFactory(t || FlexOffsetStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexOffsetStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexOffsetStyleBuilder_Factory() {\n      return new FlexOffsetStyleBuilder();\n    },\n    token: FlexOffsetStyleBuilder,\n    providedIn: \"root\"\n  });\n  return FlexOffsetStyleBuilder;\n}();\n\nvar ɵFlexOffsetStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexOffsetStyleBuilder);\n/** @type {?} */\n\nvar inputs$4 = ['fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md', 'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md', 'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm', 'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'];\n/** @type {?} */\n\nvar selector$4 = \"\\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\\n\";\n\nvar FlexOffsetDirective = /*@__PURE__*/function () {\n  var FlexOffsetDirective = /*#__PURE__*/function (_BaseDirective5) {\n    _inherits(FlexOffsetDirective, _BaseDirective5);\n\n    var _super14 = _createSuper(FlexOffsetDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} directionality\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     * @param {?} styler\n     */\n    function FlexOffsetDirective(elRef, directionality, styleBuilder, marshal, styler) {\n      var _this14;\n\n      _classCallCheck(this, FlexOffsetDirective);\n\n      _this14 = _super14.call(this, elRef, styleBuilder, styler, marshal);\n      _this14.directionality = directionality;\n      _this14.DIRECTIVE_KEY = 'flex-offset';\n\n      _this14.init([_this14.directionality.change]); // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n\n\n      if (_this14.parentElement) {\n        _this14.marshal.trackValue(_this14.parentElement, 'layout-gap').pipe(takeUntil(_this14.destroySubject)).subscribe(_this14.triggerUpdate.bind(_assertThisInitialized(_this14)));\n      }\n\n      return _this14;\n    } // *********************************************\n    // Protected methods\n    // *********************************************\n\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n\n\n    _createClass(FlexOffsetDirective, [{\n      key: \"updateWithValue\",\n      value: function updateWithValue() {\n        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n\n        /** @type {?} */\n        var layout = this.getFlexFlowDirection(\n        /** @type {?} */\n        this.parentElement, true);\n        /** @type {?} */\n\n        var isRtl = this.directionality.value === 'rtl';\n\n        if (layout === 'row' && isRtl) {\n          this.styleCache = flexOffsetCacheRowRtl;\n        } else if (layout === 'row' && !isRtl) {\n          this.styleCache = flexOffsetCacheRowLtr;\n        } else if (layout === 'column' && isRtl) {\n          this.styleCache = flexOffsetCacheColumnRtl;\n        } else if (layout === 'column' && !isRtl) {\n          this.styleCache = flexOffsetCacheColumnLtr;\n        }\n\n        this.addStyles(value + '', {\n          layout: layout,\n          isRtl: isRtl\n        });\n      }\n    }]);\n\n    return FlexOffsetDirective;\n  }(BaseDirective2);\n\n  FlexOffsetDirective.ɵfac = function FlexOffsetDirective_Factory(t) {\n    return new (t || FlexOffsetDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality), ɵngcc0.ɵɵdirectiveInject(FlexOffsetStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils));\n  };\n\n  FlexOffsetDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexOffsetDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return FlexOffsetDirective;\n}();\n\nvar DefaultFlexOffsetDirective = /*@__PURE__*/function () {\n  var DefaultFlexOffsetDirective = /*#__PURE__*/function (_FlexOffsetDirective) {\n    _inherits(DefaultFlexOffsetDirective, _FlexOffsetDirective);\n\n    var _super15 = _createSuper(DefaultFlexOffsetDirective);\n\n    function DefaultFlexOffsetDirective() {\n      var _this15;\n\n      _classCallCheck(this, DefaultFlexOffsetDirective);\n\n      _this15 = _super15.apply(this, arguments);\n      _this15.inputs = inputs$4;\n      return _this15;\n    }\n\n    return DefaultFlexOffsetDirective;\n  }(FlexOffsetDirective);\n\n  DefaultFlexOffsetDirective.ɵfac = function DefaultFlexOffsetDirective_Factory(t) {\n    return ɵDefaultFlexOffsetDirective_BaseFactory(t || DefaultFlexOffsetDirective);\n  };\n\n  DefaultFlexOffsetDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexOffsetDirective,\n    selectors: [[\"\", \"fxFlexOffset\", \"\"], [\"\", \"fxFlexOffset.xs\", \"\"], [\"\", \"fxFlexOffset.sm\", \"\"], [\"\", \"fxFlexOffset.md\", \"\"], [\"\", \"fxFlexOffset.lg\", \"\"], [\"\", \"fxFlexOffset.xl\", \"\"], [\"\", \"fxFlexOffset.lt-sm\", \"\"], [\"\", \"fxFlexOffset.lt-md\", \"\"], [\"\", \"fxFlexOffset.lt-lg\", \"\"], [\"\", \"fxFlexOffset.lt-xl\", \"\"], [\"\", \"fxFlexOffset.gt-xs\", \"\"], [\"\", \"fxFlexOffset.gt-sm\", \"\"], [\"\", \"fxFlexOffset.gt-md\", \"\"], [\"\", \"fxFlexOffset.gt-lg\", \"\"]],\n    inputs: {\n      fxFlexOffset: \"fxFlexOffset\",\n      \"fxFlexOffset.xs\": \"fxFlexOffset.xs\",\n      \"fxFlexOffset.sm\": \"fxFlexOffset.sm\",\n      \"fxFlexOffset.md\": \"fxFlexOffset.md\",\n      \"fxFlexOffset.lg\": \"fxFlexOffset.lg\",\n      \"fxFlexOffset.xl\": \"fxFlexOffset.xl\",\n      \"fxFlexOffset.lt-sm\": \"fxFlexOffset.lt-sm\",\n      \"fxFlexOffset.lt-md\": \"fxFlexOffset.lt-md\",\n      \"fxFlexOffset.lt-lg\": \"fxFlexOffset.lt-lg\",\n      \"fxFlexOffset.lt-xl\": \"fxFlexOffset.lt-xl\",\n      \"fxFlexOffset.gt-xs\": \"fxFlexOffset.gt-xs\",\n      \"fxFlexOffset.gt-sm\": \"fxFlexOffset.gt-sm\",\n      \"fxFlexOffset.gt-md\": \"fxFlexOffset.gt-md\",\n      \"fxFlexOffset.gt-lg\": \"fxFlexOffset.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return DefaultFlexOffsetDirective;\n}();\n\nvar ɵDefaultFlexOffsetDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexOffsetDirective);\n/** @type {?} */\n\nvar flexOffsetCacheRowRtl = new Map();\n/** @type {?} */\n\nvar flexOffsetCacheColumnRtl = new Map();\n/** @type {?} */\n\nvar flexOffsetCacheRowLtr = new Map();\n/** @type {?} */\n\nvar flexOffsetCacheColumnLtr = new Map();\n\nvar FlexAlignStyleBuilder = /*@__PURE__*/function () {\n  var FlexAlignStyleBuilder = /*#__PURE__*/function (_StyleBuilder6) {\n    _inherits(FlexAlignStyleBuilder, _StyleBuilder6);\n\n    var _super16 = _createSuper(FlexAlignStyleBuilder);\n\n    function FlexAlignStyleBuilder() {\n      _classCallCheck(this, FlexAlignStyleBuilder);\n\n      return _super16.apply(this, arguments);\n    }\n\n    _createClass(FlexAlignStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} input\n       * @return {?}\n       */\n      function buildStyles(input) {\n        input = input || 'stretch';\n        /** @type {?} */\n\n        var styles = {}; // Cross-axis\n\n        switch (input) {\n          case 'start':\n            styles['align-self'] = 'flex-start';\n            break;\n\n          case 'end':\n            styles['align-self'] = 'flex-end';\n            break;\n\n          default:\n            styles['align-self'] = input;\n            break;\n        }\n\n        return styles;\n      }\n    }]);\n\n    return FlexAlignStyleBuilder;\n  }(StyleBuilder);\n\n  FlexAlignStyleBuilder.ɵfac = function FlexAlignStyleBuilder_Factory(t) {\n    return ɵFlexAlignStyleBuilder_BaseFactory(t || FlexAlignStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexAlignStyleBuilder_Factory() {\n      return new FlexAlignStyleBuilder();\n    },\n    token: FlexAlignStyleBuilder,\n    providedIn: \"root\"\n  });\n  return FlexAlignStyleBuilder;\n}();\n\nvar ɵFlexAlignStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexAlignStyleBuilder);\n/** @type {?} */\n\nvar inputs$5 = ['fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md', 'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md', 'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm', 'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'];\n/** @type {?} */\n\nvar selector$5 = \"\\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\\n\";\n\nvar FlexAlignDirective = /*@__PURE__*/function () {\n  var FlexAlignDirective = /*#__PURE__*/function (_BaseDirective6) {\n    _inherits(FlexAlignDirective, _BaseDirective6);\n\n    var _super17 = _createSuper(FlexAlignDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexAlignDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this16;\n\n      _classCallCheck(this, FlexAlignDirective);\n\n      _this16 = _super17.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this16.DIRECTIVE_KEY = 'flex-align';\n      _this16.styleCache = flexAlignCache;\n\n      _this16.init();\n\n      return _this16;\n    }\n\n    return FlexAlignDirective;\n  }(BaseDirective2);\n\n  FlexAlignDirective.ɵfac = function FlexAlignDirective_Factory(t) {\n    return new (t || FlexAlignDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(FlexAlignStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexAlignDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return FlexAlignDirective;\n}();\n/** @type {?} */\n\n\nvar flexAlignCache = new Map();\n\nvar DefaultFlexAlignDirective = /*@__PURE__*/function () {\n  var DefaultFlexAlignDirective = /*#__PURE__*/function (_FlexAlignDirective) {\n    _inherits(DefaultFlexAlignDirective, _FlexAlignDirective);\n\n    var _super18 = _createSuper(DefaultFlexAlignDirective);\n\n    function DefaultFlexAlignDirective() {\n      var _this17;\n\n      _classCallCheck(this, DefaultFlexAlignDirective);\n\n      _this17 = _super18.apply(this, arguments);\n      _this17.inputs = inputs$5;\n      return _this17;\n    }\n\n    return DefaultFlexAlignDirective;\n  }(FlexAlignDirective);\n\n  DefaultFlexAlignDirective.ɵfac = function DefaultFlexAlignDirective_Factory(t) {\n    return ɵDefaultFlexAlignDirective_BaseFactory(t || DefaultFlexAlignDirective);\n  };\n\n  DefaultFlexAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultFlexAlignDirective,\n    selectors: [[\"\", \"fxFlexAlign\", \"\"], [\"\", \"fxFlexAlign.xs\", \"\"], [\"\", \"fxFlexAlign.sm\", \"\"], [\"\", \"fxFlexAlign.md\", \"\"], [\"\", \"fxFlexAlign.lg\", \"\"], [\"\", \"fxFlexAlign.xl\", \"\"], [\"\", \"fxFlexAlign.lt-sm\", \"\"], [\"\", \"fxFlexAlign.lt-md\", \"\"], [\"\", \"fxFlexAlign.lt-lg\", \"\"], [\"\", \"fxFlexAlign.lt-xl\", \"\"], [\"\", \"fxFlexAlign.gt-xs\", \"\"], [\"\", \"fxFlexAlign.gt-sm\", \"\"], [\"\", \"fxFlexAlign.gt-md\", \"\"], [\"\", \"fxFlexAlign.gt-lg\", \"\"]],\n    inputs: {\n      fxFlexAlign: \"fxFlexAlign\",\n      \"fxFlexAlign.xs\": \"fxFlexAlign.xs\",\n      \"fxFlexAlign.sm\": \"fxFlexAlign.sm\",\n      \"fxFlexAlign.md\": \"fxFlexAlign.md\",\n      \"fxFlexAlign.lg\": \"fxFlexAlign.lg\",\n      \"fxFlexAlign.xl\": \"fxFlexAlign.xl\",\n      \"fxFlexAlign.lt-sm\": \"fxFlexAlign.lt-sm\",\n      \"fxFlexAlign.lt-md\": \"fxFlexAlign.lt-md\",\n      \"fxFlexAlign.lt-lg\": \"fxFlexAlign.lt-lg\",\n      \"fxFlexAlign.lt-xl\": \"fxFlexAlign.lt-xl\",\n      \"fxFlexAlign.gt-xs\": \"fxFlexAlign.gt-xs\",\n      \"fxFlexAlign.gt-sm\": \"fxFlexAlign.gt-sm\",\n      \"fxFlexAlign.gt-md\": \"fxFlexAlign.gt-md\",\n      \"fxFlexAlign.gt-lg\": \"fxFlexAlign.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return DefaultFlexAlignDirective;\n}();\n\nvar ɵDefaultFlexAlignDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultFlexAlignDirective);\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/flex-fill/flex-fill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\nvar FlexFillStyleBuilder = /*@__PURE__*/function () {\n  var FlexFillStyleBuilder = /*#__PURE__*/function (_StyleBuilder7) {\n    _inherits(FlexFillStyleBuilder, _StyleBuilder7);\n\n    var _super19 = _createSuper(FlexFillStyleBuilder);\n\n    function FlexFillStyleBuilder() {\n      _classCallCheck(this, FlexFillStyleBuilder);\n\n      return _super19.apply(this, arguments);\n    }\n\n    _createClass(FlexFillStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} _input\n       * @return {?}\n       */\n      function buildStyles(_input) {\n        return FLEX_FILL_CSS;\n      }\n    }]);\n\n    return FlexFillStyleBuilder;\n  }(StyleBuilder);\n\n  FlexFillStyleBuilder.ɵfac = function FlexFillStyleBuilder_Factory(t) {\n    return ɵFlexFillStyleBuilder_BaseFactory(t || FlexFillStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  FlexFillStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function FlexFillStyleBuilder_Factory() {\n      return new FlexFillStyleBuilder();\n    },\n    token: FlexFillStyleBuilder,\n    providedIn: \"root\"\n  });\n  return FlexFillStyleBuilder;\n}();\n\nvar ɵFlexFillStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(FlexFillStyleBuilder);\n\nvar FlexFillDirective = /*@__PURE__*/function () {\n  var FlexFillDirective = /*#__PURE__*/function (_BaseDirective7) {\n    _inherits(FlexFillDirective, _BaseDirective7);\n\n    var _super20 = _createSuper(FlexFillDirective);\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function FlexFillDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this18;\n\n      _classCallCheck(this, FlexFillDirective);\n\n      _this18 = _super20.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this18.styleCache = flexFillCache;\n\n      _this18.addStyles('');\n\n      return _this18;\n    }\n\n    return FlexFillDirective;\n  }(BaseDirective2);\n\n  FlexFillDirective.ɵfac = function FlexFillDirective_Factory(t) {\n    return new (t || FlexFillDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(FlexFillStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  FlexFillDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: FlexFillDirective,\n    selectors: [[\"\", \"fxFill\", \"\"], [\"\", \"fxFlexFill\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return FlexFillDirective;\n}();\n/** @type {?} */\n\n\nvar flexFillCache = new Map();\n\nvar LayoutAlignStyleBuilder = /*@__PURE__*/function () {\n  var LayoutAlignStyleBuilder = /*#__PURE__*/function (_StyleBuilder8) {\n    _inherits(LayoutAlignStyleBuilder, _StyleBuilder8);\n\n    var _super21 = _createSuper(LayoutAlignStyleBuilder);\n\n    function LayoutAlignStyleBuilder() {\n      _classCallCheck(this, LayoutAlignStyleBuilder);\n\n      return _super21.apply(this, arguments);\n    }\n\n    _createClass(LayoutAlignStyleBuilder, [{\n      key: \"buildStyles\",\n      value:\n      /**\n       * @param {?} align\n       * @param {?} parent\n       * @return {?}\n       */\n      function buildStyles(align, parent) {\n        /** @type {?} */\n        var css = {};\n\n        var _align$split = align.split(' '),\n            _align$split2 = _slicedToArray(_align$split, 2),\n            mainAxis = _align$split2[0],\n            crossAxis = _align$split2[1]; // Main axis\n\n\n        switch (mainAxis) {\n          case 'center':\n            css['justify-content'] = 'center';\n            break;\n\n          case 'space-around':\n            css['justify-content'] = 'space-around';\n            break;\n\n          case 'space-between':\n            css['justify-content'] = 'space-between';\n            break;\n\n          case 'space-evenly':\n            css['justify-content'] = 'space-evenly';\n            break;\n\n          case 'end':\n          case 'flex-end':\n            css['justify-content'] = 'flex-end';\n            break;\n\n          case 'start':\n          case 'flex-start':\n          default:\n            css['justify-content'] = 'flex-start'; // default main axis\n\n            break;\n        } // Cross-axis\n\n\n        switch (crossAxis) {\n          case 'start':\n          case 'flex-start':\n            css['align-items'] = css['align-content'] = 'flex-start';\n            break;\n\n          case 'center':\n            css['align-items'] = css['align-content'] = 'center';\n            break;\n\n          case 'end':\n          case 'flex-end':\n            css['align-items'] = css['align-content'] = 'flex-end';\n            break;\n\n          case 'space-between':\n            css['align-content'] = 'space-between';\n            css['align-items'] = 'stretch';\n            break;\n\n          case 'space-around':\n            css['align-content'] = 'space-around';\n            css['align-items'] = 'stretch';\n            break;\n\n          case 'baseline':\n            css['align-content'] = 'stretch';\n            css['align-items'] = 'baseline';\n            break;\n\n          case 'stretch':\n          default:\n            // 'stretch'\n            css['align-items'] = css['align-content'] = 'stretch'; // default cross axis\n\n            break;\n        }\n\n        return (\n          /** @type {?} */\n          extendObject(css, {\n            'display': parent.inline ? 'inline-flex' : 'flex',\n            'flex-direction': parent.layout,\n            'box-sizing': 'border-box',\n            'max-width': crossAxis === 'stretch' ? !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n            'max-height': crossAxis === 'stretch' ? isFlowHorizontal(parent.layout) ? '100%' : null : null\n          })\n        );\n      }\n    }]);\n\n    return LayoutAlignStyleBuilder;\n  }(StyleBuilder);\n\n  LayoutAlignStyleBuilder.ɵfac = function LayoutAlignStyleBuilder_Factory(t) {\n    return ɵLayoutAlignStyleBuilder_BaseFactory(t || LayoutAlignStyleBuilder);\n  };\n  /** @nocollapse */\n\n\n  LayoutAlignStyleBuilder.ɵprov = ɵɵdefineInjectable({\n    factory: function LayoutAlignStyleBuilder_Factory() {\n      return new LayoutAlignStyleBuilder();\n    },\n    token: LayoutAlignStyleBuilder,\n    providedIn: \"root\"\n  });\n  return LayoutAlignStyleBuilder;\n}();\n\nvar ɵLayoutAlignStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(LayoutAlignStyleBuilder);\n/** @type {?} */\n\nvar inputs$6 = ['fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md', 'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md', 'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm', 'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'];\n/** @type {?} */\n\nvar selector$6 = \"\\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\\n\";\n\nvar LayoutAlignDirective = /*@__PURE__*/function () {\n  var LayoutAlignDirective = /*#__PURE__*/function (_BaseDirective8) {\n    _inherits(LayoutAlignDirective, _BaseDirective8);\n\n    var _super22 = _createSuper(LayoutAlignDirective);\n\n    // default inline value\n\n    /**\n     * @param {?} elRef\n     * @param {?} styleUtils\n     * @param {?} styleBuilder\n     * @param {?} marshal\n     */\n    function LayoutAlignDirective(elRef, styleUtils, styleBuilder, marshal) {\n      var _this19;\n\n      _classCallCheck(this, LayoutAlignDirective);\n\n      _this19 = _super22.call(this, elRef, styleBuilder, styleUtils, marshal);\n      _this19.DIRECTIVE_KEY = 'layout-align';\n      _this19.layout = 'row'; // default flex-direction\n      // default flex-direction\n\n      _this19.inline = false; // default inline value\n\n      _this19.init();\n\n      _this19.marshal.trackValue(_this19.nativeElement, 'layout').pipe(takeUntil(_this19.destroySubject)).subscribe(_this19.onLayoutChange.bind(_assertThisInitialized(_this19)));\n\n      return _this19;\n    } // *********************************************\n    // Protected methods\n    // *********************************************\n\n    /**\n     *\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    _createClass(LayoutAlignDirective, [{\n      key: \"updateWithValue\",\n      value: function updateWithValue(value) {\n        /** @type {?} */\n        var layout = this.layout || 'row';\n        /** @type {?} */\n\n        var inline = this.inline;\n\n        if (layout === 'row' && inline) {\n          this.styleCache = layoutAlignHorizontalInlineCache;\n        } else if (layout === 'row' && !inline) {\n          this.styleCache = layoutAlignHorizontalCache;\n        } else if (layout === 'row-reverse' && inline) {\n          this.styleCache = layoutAlignHorizontalRevInlineCache;\n        } else if (layout === 'row-reverse' && !inline) {\n          this.styleCache = layoutAlignHorizontalRevCache;\n        } else if (layout === 'column' && inline) {\n          this.styleCache = layoutAlignVerticalInlineCache;\n        } else if (layout === 'column' && !inline) {\n          this.styleCache = layoutAlignVerticalCache;\n        } else if (layout === 'column-reverse' && inline) {\n          this.styleCache = layoutAlignVerticalRevInlineCache;\n        } else if (layout === 'column-reverse' && !inline) {\n          this.styleCache = layoutAlignVerticalRevCache;\n        }\n\n        this.addStyles(value, {\n          layout: layout,\n          inline: inline\n        });\n      }\n      /**\n       * Cache the parent container 'flex-direction' and update the 'flex' styles\n       * @protected\n       * @param {?} matcher\n       * @return {?}\n       */\n\n    }, {\n      key: \"onLayoutChange\",\n      value: function onLayoutChange(matcher) {\n        var _this20 = this;\n\n        /** @type {?} */\n        var layoutKeys = matcher.value.split(' ');\n        this.layout = layoutKeys[0];\n        this.inline = matcher.value.includes('inline');\n\n        if (!LAYOUT_VALUES.find(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return x === _this20.layout;\n        })) {\n          this.layout = 'row';\n        }\n\n        this.triggerUpdate();\n      }\n    }]);\n\n    return LayoutAlignDirective;\n  }(BaseDirective2);\n\n  LayoutAlignDirective.ɵfac = function LayoutAlignDirective_Factory(t) {\n    return new (t || LayoutAlignDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(LayoutAlignStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller));\n  };\n\n  LayoutAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: LayoutAlignDirective,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return LayoutAlignDirective;\n}();\n\nvar DefaultLayoutAlignDirective = /*@__PURE__*/function () {\n  var DefaultLayoutAlignDirective = /*#__PURE__*/function (_LayoutAlignDirective) {\n    _inherits(DefaultLayoutAlignDirective, _LayoutAlignDirective);\n\n    var _super23 = _createSuper(DefaultLayoutAlignDirective);\n\n    function DefaultLayoutAlignDirective() {\n      var _this21;\n\n      _classCallCheck(this, DefaultLayoutAlignDirective);\n\n      _this21 = _super23.apply(this, arguments);\n      _this21.inputs = inputs$6;\n      return _this21;\n    }\n\n    return DefaultLayoutAlignDirective;\n  }(LayoutAlignDirective);\n\n  DefaultLayoutAlignDirective.ɵfac = function DefaultLayoutAlignDirective_Factory(t) {\n    return ɵDefaultLayoutAlignDirective_BaseFactory(t || DefaultLayoutAlignDirective);\n  };\n\n  DefaultLayoutAlignDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: DefaultLayoutAlignDirective,\n    selectors: [[\"\", \"fxLayoutAlign\", \"\"], [\"\", \"fxLayoutAlign.xs\", \"\"], [\"\", \"fxLayoutAlign.sm\", \"\"], [\"\", \"fxLayoutAlign.md\", \"\"], [\"\", \"fxLayoutAlign.lg\", \"\"], [\"\", \"fxLayoutAlign.xl\", \"\"], [\"\", \"fxLayoutAlign.lt-sm\", \"\"], [\"\", \"fxLayoutAlign.lt-md\", \"\"], [\"\", \"fxLayoutAlign.lt-lg\", \"\"], [\"\", \"fxLayoutAlign.lt-xl\", \"\"], [\"\", \"fxLayoutAlign.gt-xs\", \"\"], [\"\", \"fxLayoutAlign.gt-sm\", \"\"], [\"\", \"fxLayoutAlign.gt-md\", \"\"], [\"\", \"fxLayoutAlign.gt-lg\", \"\"]],\n    inputs: {\n      fxLayoutAlign: \"fxLayoutAlign\",\n      \"fxLayoutAlign.xs\": \"fxLayoutAlign.xs\",\n      \"fxLayoutAlign.sm\": \"fxLayoutAlign.sm\",\n      \"fxLayoutAlign.md\": \"fxLayoutAlign.md\",\n      \"fxLayoutAlign.lg\": \"fxLayoutAlign.lg\",\n      \"fxLayoutAlign.xl\": \"fxLayoutAlign.xl\",\n      \"fxLayoutAlign.lt-sm\": \"fxLayoutAlign.lt-sm\",\n      \"fxLayoutAlign.lt-md\": \"fxLayoutAlign.lt-md\",\n      \"fxLayoutAlign.lt-lg\": \"fxLayoutAlign.lt-lg\",\n      \"fxLayoutAlign.lt-xl\": \"fxLayoutAlign.lt-xl\",\n      \"fxLayoutAlign.gt-xs\": \"fxLayoutAlign.gt-xs\",\n      \"fxLayoutAlign.gt-sm\": \"fxLayoutAlign.gt-sm\",\n      \"fxLayoutAlign.gt-md\": \"fxLayoutAlign.gt-md\",\n      \"fxLayoutAlign.gt-lg\": \"fxLayoutAlign.gt-lg\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return DefaultLayoutAlignDirective;\n}();\n\nvar ɵDefaultLayoutAlignDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultLayoutAlignDirective);\n/** @type {?} */\n\nvar layoutAlignHorizontalCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalCache = new Map();\n/** @type {?} */\n\nvar layoutAlignHorizontalRevCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalRevCache = new Map();\n/** @type {?} */\n\nvar layoutAlignHorizontalInlineCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalInlineCache = new Map();\n/** @type {?} */\n\nvar layoutAlignHorizontalRevInlineCache = new Map();\n/** @type {?} */\n\nvar layoutAlignVerticalRevInlineCache = new Map();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar ALL_DIRECTIVES = [DefaultLayoutDirective, DefaultLayoutGapDirective, DefaultLayoutAlignDirective, DefaultFlexOrderDirective, DefaultFlexOffsetDirective, FlexFillDirective, DefaultFlexAlignDirective, DefaultFlexDirective];\n\nvar FlexModule = /*@__PURE__*/function () {\n  var FlexModule = function FlexModule() {\n    _classCallCheck(this, FlexModule);\n  };\n\n  FlexModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: FlexModule\n  });\n  FlexModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function FlexModule_Factory(t) {\n      return new (t || FlexModule)();\n    },\n    imports: [[CoreModule, BidiModule]]\n  });\n  return FlexModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FlexModule, {\n    declarations: function declarations() {\n      return [DefaultLayoutDirective, DefaultLayoutGapDirective, DefaultLayoutAlignDirective, DefaultFlexOrderDirective, DefaultFlexOffsetDirective, FlexFillDirective, DefaultFlexAlignDirective, DefaultFlexDirective];\n    },\n    imports: function imports() {\n      return [CoreModule, BidiModule];\n    },\n    exports: function exports() {\n      return [DefaultLayoutDirective, DefaultLayoutGapDirective, DefaultLayoutAlignDirective, DefaultFlexOrderDirective, DefaultFlexOffsetDirective, FlexFillDirective, DefaultFlexAlignDirective, DefaultFlexDirective];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: flex/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective };","map":null,"metadata":{},"sourceType":"module"}