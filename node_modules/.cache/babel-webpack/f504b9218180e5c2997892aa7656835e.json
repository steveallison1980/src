{"ast":null,"code":"import _classCallCheck from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, Inject, NgModule, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { SERVER_TOKEN, LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT } from '@angular/flex-layout/core';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵMatchMedia, ɵMockMatchMedia, ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook } from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport { ExtendedModule, ClassDirective, DefaultClassDirective, ImgSrcStyleBuilder, ImgSrcDirective, DefaultImgSrcDirective, ShowHideStyleBuilder, ShowHideDirective, DefaultShowHideDirective, StyleDirective, DefaultStyleDirective } from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective } from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport { ɵgrid_privatef, ɵgrid_privatee, ɵgrid_privated, ɵgrid_privatei, ɵgrid_privateh, ɵgrid_privateg, ɵgrid_privatel, ɵgrid_privatek, ɵgrid_privatej, ɵgrid_privateo, ɵgrid_privaten, ɵgrid_privatem, ɵgrid_privater, ɵgrid_privateq, ɵgrid_privatep, ɵgrid_privateu, ɵgrid_privatet, ɵgrid_privates, ɵgrid_privatex, ɵgrid_privatew, ɵgrid_privatev, ɵgrid_privateba, ɵgrid_privatez, ɵgrid_privatey, ɵgrid_privatec, ɵgrid_privateb, ɵgrid_privatea, ɵgrid_privatebd, ɵgrid_privatebc, ɵgrid_privatebb, ɵgrid_privatebg, ɵgrid_privatebf, ɵgrid_privatebe, GridModule } from '@angular/flex-layout/grid';\n/**\n * @fileoverview added by tsickle\n * Generated from: version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Current version of Angular Flex-Layout.\n * @type {?}\n */\n\nvar VERSION = new Version('11.0.0-beta.33');\n/**\n * @fileoverview added by tsickle\n * Generated from: module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n\nvar FlexLayoutModule = /*#__PURE__*/function () {\n  /**\n   * @param {?} serverModuleLoaded\n   * @param {?} platformId\n   */\n  function FlexLayoutModule(serverModuleLoaded, platformId) {\n    _classCallCheck(this, FlexLayoutModule);\n\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   * @param {?} configOptions\n   * @param {?=} breakpoints\n   * @return {?}\n   */\n\n\n  _createClass(FlexLayoutModule, null, [{\n    key: \"withConfig\",\n    value: function withConfig(configOptions) {\n      var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return {\n        ngModule: FlexLayoutModule,\n        providers: configOptions.serverLoaded ? [{\n          provide: LAYOUT_CONFIG,\n          useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n        }, {\n          provide: BREAKPOINT,\n          useValue: breakpoints,\n          multi: true\n        }, {\n          provide: SERVER_TOKEN,\n          useValue: true\n        }] : [{\n          provide: LAYOUT_CONFIG,\n          useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n        }, {\n          provide: BREAKPOINT,\n          useValue: breakpoints,\n          multi: true\n        }]\n      };\n    }\n  }]);\n\n  return FlexLayoutModule;\n}();\n\nFlexLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: FlexLayoutModule\n});\nFlexLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function FlexLayoutModule_Factory(t) {\n    return new (t || FlexLayoutModule)(ɵngcc0.ɵɵinject(SERVER_TOKEN), ɵngcc0.ɵɵinject(PLATFORM_ID));\n  },\n  imports: [[FlexModule, ExtendedModule, GridModule], FlexModule, ExtendedModule, GridModule]\n});\n/** @nocollapse */\n\nFlexLayoutModule.ctorParameters = function () {\n  return [{\n    type: Boolean,\n    decorators: [{\n      type: Inject,\n      args: [SERVER_TOKEN]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FlexLayoutModule, {\n    imports: function imports() {\n      return [FlexModule, ExtendedModule, GridModule];\n    },\n    exports: function exports() {\n      return [FlexModule, ExtendedModule, GridModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FlexLayoutModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FlexModule, ExtendedModule, GridModule],\n      exports: [FlexModule, ExtendedModule, GridModule]\n    }]\n  }], function () {\n    return [{\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { VERSION, FlexLayoutModule };","map":{"version":3,"sources":["../../src/lib/version.ts","../../src/lib/module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAa,OAAO,GAAG,IAAI,OAAJ,CAAY,gBAAZ,CAAvB;AAAuD;AAClD;AAAkC;AAA6B;AAAqJ;;AAAI;AAAI;AAAuF;AAA4F;AAA0F;AAAwB;;ICoBtgB,gB;AAAE;AAAQ;AAGF;AAA6B;AAoBrC,4BAAoC,kBAApC,EACmC,UADnC,EAAA;AAAA;;AAEI,QAAI,gBAAgB,CAAC,UAAD,CAAhB,IAAgC,CAAC,kBAArC,EAAyD;AACvD,MAAA,OAAO,CAAC,IAAR,CAAa,0EAAb;AACD;AACF;AACH;AACM;AAAqE;AAAuD;AAAgC;AAA+B;AAAmB;;;;;WAxBlN,oBAAkB,aAAlB,EAEF;AAAA,UAAA,WAAA,uEAA2D,EAA3D;AACI,aAAO;AACL,QAAA,QAAQ,EAAE,gBADL;AAEL,QAAA,SAAS,EAAE,aAAa,CAAC,YAAd,GACT,CACE;AAAC,UAAA,OAAO,EAAE,aAAV;AAAyB,UAAA,QAAQ,EAA3C,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA,CAAA,EAAoE,aAApE;AAAU,SADF,EAEE;AAAC,UAAA,OAAO,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,WAAhC;AAA6C,UAAA,KAAK,EAAE;AAApD,SAFF,EAGE;AAAC,UAAA,OAAO,EAAE,YAAV;AAAwB,UAAA,QAAQ,EAAE;AAAlC,SAHF,CADS,GAKL,CACF;AAAC,UAAA,OAAO,EAAE,aAAV;AAAyB,UAAA,QAAQ,EAA3C,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA,CAAA,EAAoE,aAApE;AAAU,SADE,EAEF;AAAC,UAAA,OAAO,EAAE,UAAV;AAAsB,UAAA,QAAQ,EAAE,WAAhC;AAA6C,UAAA,KAAK,EAAE;AAApD,SAFE;AAPD,OAAP;AAYD;;;;;;+BAzBH,gB,CAAC;AAAA,EAAA,IAAD,EAAA;AAAC,C;AACC,gBAAU,CAAA,IAAV,GAAsB,MAAA,CAAA,gBAAA,CAAgB;AAAU,EAAA,OAAC,EAAA,SAAA,wBAAA,CAC3B,CAD2B,EAC3B;AAAA,WAAc,KAAE,CAAA,IAAA,gBAAF,EACtC,MAAA,CAAA,QAAA,CAAA,YAAA,CADsC,EACtC,MAAA,CAAA,QAAA,CAAA,WAAA,CADsC,CAAd;AACxB,GAFwC;AAExC,EAAA,OAAA,EAAA,CAAA,CAAA,UAAA,EAAA,cAAA,EAAA,UAAA,CAAA,EAAA,UAAA,EAAA,cAAA,EAAA,UAAA;AAFwC,CAAhB,CAAtB;AAGD;;AAAmB,gBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAuBpB;AAAA,IAAA,IAAA,EAAA,OAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAAe,MAAf;AAAA,MAAA,IAAA,EAAA,CAAA,YAAA;AAAA,KAAA;AAAA,GAvBoB,EAwBpB;AAAA,IAAA,IAAA,EAA+C,MAA/C;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAAe,MAAf;AAAA,MAAA,IAAA,EAAA,CAAA,WAAA;AAAA,KAAA;AAAA,GAxBoB,CAAA;AAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBjB,C;AAAE;AAAI;AAAkC;AACxB;AAGhB;;AAED;AAAI;AAAkC;AAA4B;AAAqJ;;;AAAK,SAAA,OAAA,EAAA,gBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('11.0.0-beta.33');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, ModuleWithProviders, NgModule, PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    // tslint:disable-next-line:max-line-length\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders<FlexLayoutModule> {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}