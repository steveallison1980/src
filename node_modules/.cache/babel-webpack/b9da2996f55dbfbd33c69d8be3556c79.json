{"ast":null,"code":"import _classCallCheck from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, Inject, NgModule, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { SERVER_TOKEN, LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT } from '@angular/flex-layout/core';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵMatchMedia, ɵMockMatchMedia, ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook } from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport { ExtendedModule, ClassDirective, DefaultClassDirective, ImgSrcStyleBuilder, ImgSrcDirective, DefaultImgSrcDirective, ShowHideStyleBuilder, ShowHideDirective, DefaultShowHideDirective, StyleDirective, DefaultStyleDirective } from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport { FlexModule, FlexStyleBuilder, FlexDirective, DefaultFlexDirective, FlexAlignStyleBuilder, FlexAlignDirective, DefaultFlexAlignDirective, FlexFillStyleBuilder, FlexFillDirective, FlexOffsetStyleBuilder, FlexOffsetDirective, DefaultFlexOffsetDirective, FlexOrderStyleBuilder, FlexOrderDirective, DefaultFlexOrderDirective, LayoutStyleBuilder, LayoutDirective, DefaultLayoutDirective, LayoutAlignStyleBuilder, LayoutAlignDirective, DefaultLayoutAlignDirective, LayoutGapStyleBuilder, LayoutGapDirective, DefaultLayoutGapDirective } from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport { ɵgrid_privatef, ɵgrid_privatee, ɵgrid_privated, ɵgrid_privatei, ɵgrid_privateh, ɵgrid_privateg, ɵgrid_privatel, ɵgrid_privatek, ɵgrid_privatej, ɵgrid_privateo, ɵgrid_privaten, ɵgrid_privatem, ɵgrid_privater, ɵgrid_privateq, ɵgrid_privatep, ɵgrid_privateu, ɵgrid_privatet, ɵgrid_privates, ɵgrid_privatex, ɵgrid_privatew, ɵgrid_privatev, ɵgrid_privateba, ɵgrid_privatez, ɵgrid_privatey, ɵgrid_privatec, ɵgrid_privateb, ɵgrid_privatea, ɵgrid_privatebd, ɵgrid_privatebc, ɵgrid_privatebb, ɵgrid_privatebg, ɵgrid_privatebf, ɵgrid_privatebe, GridModule } from '@angular/flex-layout/grid';\n/**\n * @fileoverview added by tsickle\n * Generated from: version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Current version of Angular Flex-Layout.\n * @type {?}\n */\n\nvar VERSION = new Version('11.0.0-beta.33');\n\nvar FlexLayoutModule = /*@__PURE__*/function () {\n  var FlexLayoutModule = /*#__PURE__*/function () {\n    /**\n     * @param {?} serverModuleLoaded\n     * @param {?} platformId\n     */\n    function FlexLayoutModule(serverModuleLoaded, platformId) {\n      _classCallCheck(this, FlexLayoutModule);\n\n      if (isPlatformServer(platformId) && !serverModuleLoaded) {\n        console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n      }\n    }\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     * @param {?} configOptions\n     * @param {?=} breakpoints\n     * @return {?}\n     */\n\n\n    _createClass(FlexLayoutModule, null, [{\n      key: \"withConfig\",\n      value: function withConfig(configOptions) {\n        var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        return {\n          ngModule: FlexLayoutModule,\n          providers: configOptions.serverLoaded ? [{\n            provide: LAYOUT_CONFIG,\n            useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n          }, {\n            provide: BREAKPOINT,\n            useValue: breakpoints,\n            multi: true\n          }, {\n            provide: SERVER_TOKEN,\n            useValue: true\n          }] : [{\n            provide: LAYOUT_CONFIG,\n            useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n          }, {\n            provide: BREAKPOINT,\n            useValue: breakpoints,\n            multi: true\n          }]\n        };\n      }\n    }]);\n\n    return FlexLayoutModule;\n  }();\n\n  FlexLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: FlexLayoutModule\n  });\n  FlexLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function FlexLayoutModule_Factory(t) {\n      return new (t || FlexLayoutModule)(ɵngcc0.ɵɵinject(SERVER_TOKEN), ɵngcc0.ɵɵinject(PLATFORM_ID));\n    },\n    imports: [[FlexModule, ExtendedModule, GridModule], FlexModule, ExtendedModule, GridModule]\n  });\n  return FlexLayoutModule;\n}();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FlexLayoutModule, {\n    imports: function imports() {\n      return [FlexModule, ExtendedModule, GridModule];\n    },\n    exports: function exports() {\n      return [FlexModule, ExtendedModule, GridModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { VERSION, FlexLayoutModule };","map":null,"metadata":{},"sourceType":"module"}