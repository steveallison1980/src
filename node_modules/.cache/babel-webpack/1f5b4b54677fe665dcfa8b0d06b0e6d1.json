{"ast":null,"code":"import _classCallCheck from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar MatDivider = /*@__PURE__*/function () {\n  var MatDivider = /*#__PURE__*/function () {\n    function MatDivider() {\n      _classCallCheck(this, MatDivider);\n\n      this._vertical = false;\n      this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n\n\n    _createClass(MatDivider, [{\n      key: \"vertical\",\n      get: function get() {\n        return this._vertical;\n      },\n      set: function set(value) {\n        this._vertical = coerceBooleanProperty(value);\n      }\n      /** Whether the divider is an inset divider. */\n\n    }, {\n      key: \"inset\",\n      get: function get() {\n        return this._inset;\n      },\n      set: function set(value) {\n        this._inset = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return MatDivider;\n  }();\n\n  MatDivider.ɵfac = function MatDivider_Factory(t) {\n    return new (t || MatDivider)();\n  };\n\n  MatDivider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MatDivider,\n    selectors: [[\"mat-divider\"]],\n    hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"],\n    hostVars: 7,\n    hostBindings: function MatDivider_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n      }\n    },\n    inputs: {\n      vertical: \"vertical\",\n      inset: \"inset\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function MatDivider_Template(rf, ctx) {},\n    styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatDivider;\n}();\n\nvar MatDividerModule = /*@__PURE__*/function () {\n  var MatDividerModule = function MatDividerModule() {\n    _classCallCheck(this, MatDividerModule);\n  };\n\n  MatDividerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MatDividerModule\n  });\n  MatDividerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    factory: function MatDividerModule_Factory(t) {\n      return new (t || MatDividerModule)();\n    },\n    imports: [[MatCommonModule], MatCommonModule]\n  });\n  return MatDividerModule;\n}();\n/*@__PURE__*/\n\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, {\n    declarations: function declarations() {\n      return [MatDivider];\n    },\n    imports: function imports() {\n      return [MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatDivider, MatCommonModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatDivider, MatDividerModule };","map":null,"metadata":{},"sourceType":"module"}