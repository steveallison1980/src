{"ast":null,"code":"import _toArray from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _classCallCheck from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"c:/PROJECTS/WEBSITE/newtest/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input, NgModule, IterableDiffers, KeyValueDiffers, Optional, Renderer2, Self, SecurityContext, ɵɵdefineInjectable } from '@angular/core';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { MediaMarshaller, BaseDirective2, SERVER_TOKEN, StyleBuilder, StyleUtils, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { DomSanitizer } from '@angular/platform-browser';\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/img-src/img-src.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/flex-layout/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/platform-browser';\n\nvar ImgSrcStyleBuilder = /*#__PURE__*/function (_StyleBuilder) {\n  _inherits(ImgSrcStyleBuilder, _StyleBuilder);\n\n  var _super = _createSuper(ImgSrcStyleBuilder);\n\n  function ImgSrcStyleBuilder() {\n    _classCallCheck(this, ImgSrcStyleBuilder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImgSrcStyleBuilder, [{\n    key: \"buildStyles\",\n    value:\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function buildStyles(url) {\n      return {\n        'content': url ? \"url(\".concat(url, \")\") : ''\n      };\n    }\n  }]);\n\n  return ImgSrcStyleBuilder;\n}(StyleBuilder);\n\nImgSrcStyleBuilder.ɵfac = function ImgSrcStyleBuilder_Factory(t) {\n  return ɵImgSrcStyleBuilder_BaseFactory(t || ImgSrcStyleBuilder);\n};\n/** @nocollapse */\n\n\nImgSrcStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function ImgSrcStyleBuilder_Factory() {\n    return new ImgSrcStyleBuilder();\n  },\n  token: ImgSrcStyleBuilder,\n  providedIn: \"root\"\n});\nvar ɵImgSrcStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(ImgSrcStyleBuilder);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImgSrcStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nvar ImgSrcDirective = /*#__PURE__*/function (_BaseDirective) {\n  _inherits(ImgSrcDirective, _BaseDirective);\n\n  var _super2 = _createSuper(ImgSrcDirective);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} styleBuilder\n   * @param {?} styler\n   * @param {?} marshal\n   * @param {?} platformId\n   * @param {?} serverModuleLoaded\n   */\n  function ImgSrcDirective(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n    var _this;\n\n    _classCallCheck(this, ImgSrcDirective);\n\n    _this = _super2.call(this, elementRef, styleBuilder, styler, marshal);\n    _this.platformId = platformId;\n    _this.serverModuleLoaded = serverModuleLoaded;\n    _this.DIRECTIVE_KEY = 'img-src';\n    _this.defaultSrc = '';\n    _this.styleCache = imgSrcCache;\n\n    _this.init();\n\n    _this.setValue(_this.nativeElement.getAttribute('src') || '', '');\n\n    if (isPlatformServer(_this.platformId) && _this.serverModuleLoaded) {\n      _this.nativeElement.setAttribute('src', '');\n    }\n\n    return _this;\n  }\n  /**\n   * @param {?} val\n   * @return {?}\n   */\n\n\n  _createClass(ImgSrcDirective, [{\n    key: \"src\",\n    set: function set(val) {\n      this.defaultSrc = val;\n      this.setValue(this.defaultSrc, '');\n    }\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateWithValue\",\n    value: function updateWithValue(value) {\n      /** @type {?} */\n      var url = value || this.defaultSrc;\n\n      if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n        this.addStyles(url);\n      } else {\n        this.nativeElement.setAttribute('src', url);\n      }\n    }\n  }]);\n\n  return ImgSrcDirective;\n}(BaseDirective2);\n\nImgSrcDirective.ɵfac = function ImgSrcDirective_Factory(t) {\n  return new (t || ImgSrcDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ImgSrcStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(SERVER_TOKEN));\n};\n\nImgSrcDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ImgSrcDirective,\n  inputs: {\n    src: \"src\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nImgSrcDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ImgSrcStyleBuilder\n  }, {\n    type: StyleUtils\n  }, {\n    type: MediaMarshaller\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Inject,\n      args: [SERVER_TOKEN]\n    }]\n  }];\n};\n\nImgSrcDirective.propDecorators = {\n  src: [{\n    type: Input,\n    args: ['src']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImgSrcDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ImgSrcStyleBuilder\n    }, {\n      type: ɵngcc1.StyleUtils\n    }, {\n      type: ɵngcc1.MediaMarshaller\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  }, {\n    src: [{\n      type: Input,\n      args: ['src']\n    }]\n  });\n})();\n/** @type {?} */\n\n\nvar imgSrcCache = new Map();\n/** @type {?} */\n\nvar inputs = ['src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl', 'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl', 'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'];\n/** @type {?} */\n\nvar selector = \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\";\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n\nvar DefaultImgSrcDirective = /*#__PURE__*/function (_ImgSrcDirective) {\n  _inherits(DefaultImgSrcDirective, _ImgSrcDirective);\n\n  var _super3 = _createSuper(DefaultImgSrcDirective);\n\n  function DefaultImgSrcDirective() {\n    var _this2;\n\n    _classCallCheck(this, DefaultImgSrcDirective);\n\n    _this2 = _super3.apply(this, arguments);\n    _this2.inputs = inputs;\n    return _this2;\n  }\n\n  return DefaultImgSrcDirective;\n}(ImgSrcDirective);\n\nDefaultImgSrcDirective.ɵfac = function DefaultImgSrcDirective_Factory(t) {\n  return ɵDefaultImgSrcDirective_BaseFactory(t || DefaultImgSrcDirective);\n};\n\nDefaultImgSrcDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DefaultImgSrcDirective,\n  selectors: [[\"img\", \"src.xs\", \"\"], [\"img\", \"src.sm\", \"\"], [\"img\", \"src.md\", \"\"], [\"img\", \"src.lg\", \"\"], [\"img\", \"src.xl\", \"\"], [\"img\", \"src.lt-sm\", \"\"], [\"img\", \"src.lt-md\", \"\"], [\"img\", \"src.lt-lg\", \"\"], [\"img\", \"src.lt-xl\", \"\"], [\"img\", \"src.gt-xs\", \"\"], [\"img\", \"src.gt-sm\", \"\"], [\"img\", \"src.gt-md\", \"\"], [\"img\", \"src.gt-lg\", \"\"]],\n  inputs: {\n    \"src.xs\": \"src.xs\",\n    \"src.sm\": \"src.sm\",\n    \"src.md\": \"src.md\",\n    \"src.lg\": \"src.lg\",\n    \"src.xl\": \"src.xl\",\n    \"src.lt-sm\": \"src.lt-sm\",\n    \"src.lt-md\": \"src.lt-md\",\n    \"src.lt-lg\": \"src.lt-lg\",\n    \"src.lt-xl\": \"src.lt-xl\",\n    \"src.gt-xs\": \"src.gt-xs\",\n    \"src.gt-sm\": \"src.gt-sm\",\n    \"src.gt-md\": \"src.gt-md\",\n    \"src.gt-lg\": \"src.gt-lg\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵDefaultImgSrcDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultImgSrcDirective);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultImgSrcDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector,\n      inputs: inputs\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/class/class.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ClassDirective = /*#__PURE__*/function (_BaseDirective2) {\n  _inherits(ClassDirective, _BaseDirective2);\n\n  var _super4 = _createSuper(ClassDirective);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} styler\n   * @param {?} marshal\n   * @param {?} iterableDiffers\n   * @param {?} keyValueDiffers\n   * @param {?} renderer2\n   * @param {?} ngClassInstance\n   */\n  function ClassDirective(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n    var _this3;\n\n    _classCallCheck(this, ClassDirective);\n\n    _this3 = _super4.call(this, elementRef,\n    /** @type {?} */\n    null, styler, marshal);\n    _this3.ngClassInstance = ngClassInstance;\n    _this3.DIRECTIVE_KEY = 'ngClass';\n\n    if (!_this3.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      _this3.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n    }\n\n    _this3.init();\n\n    _this3.setValue('', '');\n\n    return _this3;\n  }\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   * @param {?} val\n   * @return {?}\n   */\n\n\n  _createClass(ClassDirective, [{\n    key: \"klass\",\n    set: function set(val) {\n      this.ngClassInstance.klass = val;\n      this.setValue(val, '');\n    }\n    /**\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateWithValue\",\n    value: function updateWithValue(value) {\n      this.ngClassInstance.ngClass = value;\n      this.ngClassInstance.ngDoCheck();\n    } // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.ngClassInstance.ngDoCheck();\n    }\n  }]);\n\n  return ClassDirective;\n}(BaseDirective2);\n\nClassDirective.ɵfac = function ClassDirective_Factory(t) {\n  return new (t || ClassDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgClass, 10));\n};\n\nClassDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ClassDirective,\n  inputs: {\n    klass: [\"class\", \"klass\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nClassDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: StyleUtils\n  }, {\n    type: MediaMarshaller\n  }, {\n    type: IterableDiffers\n  }, {\n    type: KeyValueDiffers\n  }, {\n    type: Renderer2\n  }, {\n    type: NgClass,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }];\n};\n\nClassDirective.propDecorators = {\n  klass: [{\n    type: Input,\n    args: ['class']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClassDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.StyleUtils\n    }, {\n      type: ɵngcc1.MediaMarshaller\n    }, {\n      type: ɵngcc0.IterableDiffers\n    }, {\n      type: ɵngcc0.KeyValueDiffers\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc2.NgClass,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, {\n    klass: [{\n      type: Input,\n      args: ['class']\n    }]\n  });\n})();\n/** @type {?} */\n\n\nvar inputs$1 = ['ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl', 'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl', 'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'];\n/** @type {?} */\n\nvar selector$1 = \"\\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n\";\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n\nvar DefaultClassDirective = /*#__PURE__*/function (_ClassDirective) {\n  _inherits(DefaultClassDirective, _ClassDirective);\n\n  var _super5 = _createSuper(DefaultClassDirective);\n\n  function DefaultClassDirective() {\n    var _this4;\n\n    _classCallCheck(this, DefaultClassDirective);\n\n    _this4 = _super5.apply(this, arguments);\n    _this4.inputs = inputs$1;\n    return _this4;\n  }\n\n  return DefaultClassDirective;\n}(ClassDirective);\n\nDefaultClassDirective.ɵfac = function DefaultClassDirective_Factory(t) {\n  return ɵDefaultClassDirective_BaseFactory(t || DefaultClassDirective);\n};\n\nDefaultClassDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DefaultClassDirective,\n  selectors: [[\"\", \"ngClass\", \"\"], [\"\", \"ngClass.xs\", \"\"], [\"\", \"ngClass.sm\", \"\"], [\"\", \"ngClass.md\", \"\"], [\"\", \"ngClass.lg\", \"\"], [\"\", \"ngClass.xl\", \"\"], [\"\", \"ngClass.lt-sm\", \"\"], [\"\", \"ngClass.lt-md\", \"\"], [\"\", \"ngClass.lt-lg\", \"\"], [\"\", \"ngClass.lt-xl\", \"\"], [\"\", \"ngClass.gt-xs\", \"\"], [\"\", \"ngClass.gt-sm\", \"\"], [\"\", \"ngClass.gt-md\", \"\"], [\"\", \"ngClass.gt-lg\", \"\"]],\n  inputs: {\n    ngClass: \"ngClass\",\n    \"ngClass.xs\": \"ngClass.xs\",\n    \"ngClass.sm\": \"ngClass.sm\",\n    \"ngClass.md\": \"ngClass.md\",\n    \"ngClass.lg\": \"ngClass.lg\",\n    \"ngClass.xl\": \"ngClass.xl\",\n    \"ngClass.lt-sm\": \"ngClass.lt-sm\",\n    \"ngClass.lt-md\": \"ngClass.lt-md\",\n    \"ngClass.lt-lg\": \"ngClass.lt-lg\",\n    \"ngClass.lt-xl\": \"ngClass.lt-xl\",\n    \"ngClass.gt-xs\": \"ngClass.gt-xs\",\n    \"ngClass.gt-sm\": \"ngClass.gt-sm\",\n    \"ngClass.gt-md\": \"ngClass.gt-md\",\n    \"ngClass.gt-lg\": \"ngClass.gt-lg\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵDefaultClassDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultClassDirective);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultClassDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$1,\n      inputs: inputs$1\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/show-hide/show-hide.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ShowHideStyleBuilder = /*#__PURE__*/function (_StyleBuilder2) {\n  _inherits(ShowHideStyleBuilder, _StyleBuilder2);\n\n  var _super6 = _createSuper(ShowHideStyleBuilder);\n\n  function ShowHideStyleBuilder() {\n    _classCallCheck(this, ShowHideStyleBuilder);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(ShowHideStyleBuilder, [{\n    key: \"buildStyles\",\n    value:\n    /**\n     * @param {?} show\n     * @param {?} parent\n     * @return {?}\n     */\n    function buildStyles(show, parent) {\n      /** @type {?} */\n      var shouldShow = show === 'true';\n      return {\n        'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none'\n      };\n    }\n  }]);\n\n  return ShowHideStyleBuilder;\n}(StyleBuilder);\n\nShowHideStyleBuilder.ɵfac = function ShowHideStyleBuilder_Factory(t) {\n  return ɵShowHideStyleBuilder_BaseFactory(t || ShowHideStyleBuilder);\n};\n/** @nocollapse */\n\n\nShowHideStyleBuilder.ɵprov = ɵɵdefineInjectable({\n  factory: function ShowHideStyleBuilder_Factory() {\n    return new ShowHideStyleBuilder();\n  },\n  token: ShowHideStyleBuilder,\n  providedIn: \"root\"\n});\nvar ɵShowHideStyleBuilder_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(ShowHideStyleBuilder);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowHideStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nvar ShowHideDirective = /*#__PURE__*/function (_BaseDirective3) {\n  _inherits(ShowHideDirective, _BaseDirective3);\n\n  var _super7 = _createSuper(ShowHideDirective);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} styleBuilder\n   * @param {?} styler\n   * @param {?} marshal\n   * @param {?} layoutConfig\n   * @param {?} platformId\n   * @param {?} serverModuleLoaded\n   */\n  function ShowHideDirective(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n    var _this5;\n\n    _classCallCheck(this, ShowHideDirective);\n\n    _this5 = _super7.call(this, elementRef, styleBuilder, styler, marshal);\n    _this5.layoutConfig = layoutConfig;\n    _this5.platformId = platformId;\n    _this5.serverModuleLoaded = serverModuleLoaded;\n    _this5.DIRECTIVE_KEY = 'show-hide';\n    /**\n     * Original DOM Element CSS display style\n     */\n\n    _this5.display = '';\n    _this5.hasLayout = false;\n    _this5.hasFlexChild = false;\n    return _this5;\n  } // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ShowHideDirective, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.trackExtraTriggers();\n      /** @type {?} */\n\n      var children = Array.from(this.nativeElement.children);\n\n      for (var i = 0; i < children.length; i++) {\n        if (this.marshal.hasValue(\n        /** @type {?} */\n        children[i], 'flex')) {\n          this.hasFlexChild = true;\n          break;\n        }\n      }\n\n      if (DISPLAY_MAP.has(this.nativeElement)) {\n        this.display =\n        /** @type {?} */\n        DISPLAY_MAP.get(this.nativeElement);\n      } else {\n        this.display = this.getDisplayStyle();\n        DISPLAY_MAP.set(this.nativeElement, this.display);\n      }\n\n      this.init(); // set the default to show unless explicitly overridden\n\n      /** @type {?} */\n\n      var defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n\n      if (defaultValue === undefined || defaultValue === '') {\n        this.setValue(true, '');\n      } else {\n        this.triggerUpdate();\n      }\n    }\n    /**\n     * On changes to any \\@Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this6 = this;\n\n      Object.keys(changes).forEach(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      function (key) {\n        if (_this6.inputs.indexOf(key) !== -1) {\n          /** @type {?} */\n          var inputKey = key.split('.');\n          /** @type {?} */\n\n          var bp = inputKey.slice(1).join('.');\n          /** @type {?} */\n\n          var inputValue = changes[key].currentValue;\n          /** @type {?} */\n\n          var shouldShow = inputValue !== '' ? inputValue !== 0 ? coerceBooleanProperty(inputValue) : false : true;\n\n          if (inputKey[0] === 'fxHide') {\n            shouldShow = !shouldShow;\n          }\n\n          _this6.setValue(shouldShow, bp);\n        }\n      });\n    } // *********************************************\n    // Protected methods\n    // *********************************************\n\n    /**\n     *  Watch for these extra triggers to update fxShow, fxHide stylings\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"trackExtraTriggers\",\n    value: function trackExtraTriggers() {\n      var _this7 = this;\n\n      this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n      ['layout', 'layout-align'].forEach(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      function (key) {\n        _this7.marshal.trackValue(_this7.nativeElement, key).pipe(takeUntil(_this7.destroySubject)).subscribe(_this7.triggerUpdate.bind(_this7));\n      });\n    }\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDisplayStyle\",\n    value: function getDisplayStyle() {\n      return this.hasLayout || this.hasFlexChild && this.layoutConfig.addFlexToParent ? 'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n    }\n    /**\n     * Validate the visibility value and then update the host's inline display style\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateWithValue\",\n    value: function updateWithValue() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (value === '') {\n        return;\n      }\n      /** @type {?} */\n\n\n      var isServer = isPlatformServer(this.platformId);\n      this.addStyles(value ? 'true' : 'false', {\n        display: this.display,\n        isServer: isServer\n      });\n\n      if (isServer && this.serverModuleLoaded) {\n        this.nativeElement.style.setProperty('display', '');\n      }\n\n      this.marshal.triggerUpdate(\n      /** @type {?} */\n      this.parentElement, 'layout-gap');\n    }\n  }]);\n\n  return ShowHideDirective;\n}(BaseDirective2);\n\nShowHideDirective.ɵfac = function ShowHideDirective_Factory(t) {\n  return new (t || ShowHideDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ShowHideStyleBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller), ɵngcc0.ɵɵdirectiveInject(LAYOUT_CONFIG), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(SERVER_TOKEN));\n};\n\nShowHideDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ShowHideDirective,\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nShowHideDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ShowHideStyleBuilder\n  }, {\n    type: StyleUtils\n  }, {\n    type: MediaMarshaller\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LAYOUT_CONFIG]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Inject,\n      args: [SERVER_TOKEN]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowHideDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ShowHideStyleBuilder\n    }, {\n      type: ɵngcc1.StyleUtils\n    }, {\n      type: ɵngcc1.MediaMarshaller\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n/** @type {?} */\n\n\nvar DISPLAY_MAP = new WeakMap();\n/** @type {?} */\n\nvar inputs$2 = ['fxShow', 'fxShow.print', 'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl', 'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl', 'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg', 'fxHide', 'fxHide.print', 'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl', 'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl', 'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'];\n/** @type {?} */\n\nvar selector$2 = \"\\n  [fxShow], [fxShow.print],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide], [fxHide.print],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\";\n/**\n * 'show' Layout API directive\n */\n\nvar DefaultShowHideDirective = /*#__PURE__*/function (_ShowHideDirective) {\n  _inherits(DefaultShowHideDirective, _ShowHideDirective);\n\n  var _super8 = _createSuper(DefaultShowHideDirective);\n\n  function DefaultShowHideDirective() {\n    var _this8;\n\n    _classCallCheck(this, DefaultShowHideDirective);\n\n    _this8 = _super8.apply(this, arguments);\n    _this8.inputs = inputs$2;\n    return _this8;\n  }\n\n  return DefaultShowHideDirective;\n}(ShowHideDirective);\n\nDefaultShowHideDirective.ɵfac = function DefaultShowHideDirective_Factory(t) {\n  return ɵDefaultShowHideDirective_BaseFactory(t || DefaultShowHideDirective);\n};\n\nDefaultShowHideDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DefaultShowHideDirective,\n  selectors: [[\"\", \"fxShow\", \"\"], [\"\", \"fxShow.print\", \"\"], [\"\", \"fxShow.xs\", \"\"], [\"\", \"fxShow.sm\", \"\"], [\"\", \"fxShow.md\", \"\"], [\"\", \"fxShow.lg\", \"\"], [\"\", \"fxShow.xl\", \"\"], [\"\", \"fxShow.lt-sm\", \"\"], [\"\", \"fxShow.lt-md\", \"\"], [\"\", \"fxShow.lt-lg\", \"\"], [\"\", \"fxShow.lt-xl\", \"\"], [\"\", \"fxShow.gt-xs\", \"\"], [\"\", \"fxShow.gt-sm\", \"\"], [\"\", \"fxShow.gt-md\", \"\"], [\"\", \"fxShow.gt-lg\", \"\"], [\"\", \"fxHide\", \"\"], [\"\", \"fxHide.print\", \"\"], [\"\", \"fxHide.xs\", \"\"], [\"\", \"fxHide.sm\", \"\"], [\"\", \"fxHide.md\", \"\"], [\"\", \"fxHide.lg\", \"\"], [\"\", \"fxHide.xl\", \"\"], [\"\", \"fxHide.lt-sm\", \"\"], [\"\", \"fxHide.lt-md\", \"\"], [\"\", \"fxHide.lt-lg\", \"\"], [\"\", \"fxHide.lt-xl\", \"\"], [\"\", \"fxHide.gt-xs\", \"\"], [\"\", \"fxHide.gt-sm\", \"\"], [\"\", \"fxHide.gt-md\", \"\"], [\"\", \"fxHide.gt-lg\", \"\"]],\n  inputs: {\n    fxShow: \"fxShow\",\n    \"fxShow.print\": \"fxShow.print\",\n    \"fxShow.xs\": \"fxShow.xs\",\n    \"fxShow.sm\": \"fxShow.sm\",\n    \"fxShow.md\": \"fxShow.md\",\n    \"fxShow.lg\": \"fxShow.lg\",\n    \"fxShow.xl\": \"fxShow.xl\",\n    \"fxShow.lt-sm\": \"fxShow.lt-sm\",\n    \"fxShow.lt-md\": \"fxShow.lt-md\",\n    \"fxShow.lt-lg\": \"fxShow.lt-lg\",\n    \"fxShow.lt-xl\": \"fxShow.lt-xl\",\n    \"fxShow.gt-xs\": \"fxShow.gt-xs\",\n    \"fxShow.gt-sm\": \"fxShow.gt-sm\",\n    \"fxShow.gt-md\": \"fxShow.gt-md\",\n    \"fxShow.gt-lg\": \"fxShow.gt-lg\",\n    fxHide: \"fxHide\",\n    \"fxHide.print\": \"fxHide.print\",\n    \"fxHide.xs\": \"fxHide.xs\",\n    \"fxHide.sm\": \"fxHide.sm\",\n    \"fxHide.md\": \"fxHide.md\",\n    \"fxHide.lg\": \"fxHide.lg\",\n    \"fxHide.xl\": \"fxHide.xl\",\n    \"fxHide.lt-sm\": \"fxHide.lt-sm\",\n    \"fxHide.lt-md\": \"fxHide.lt-md\",\n    \"fxHide.lt-lg\": \"fxHide.lt-lg\",\n    \"fxHide.lt-xl\": \"fxHide.lt-xl\",\n    \"fxHide.gt-xs\": \"fxHide.gt-xs\",\n    \"fxHide.gt-sm\": \"fxHide.gt-sm\",\n    \"fxHide.gt-md\": \"fxHide.gt-md\",\n    \"fxHide.gt-lg\": \"fxHide.gt-lg\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵDefaultShowHideDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultShowHideDirective);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultShowHideDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$2,\n      inputs: inputs$2\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/style/style-transforms.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * NgStyle allowed inputs\n */\n\n\nvar NgStyleKeyValue =\n/**\n * @param {?} key\n * @param {?} value\n * @param {?=} noQuotes\n */\nfunction NgStyleKeyValue(key, value) {\n  var noQuotes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  _classCallCheck(this, NgStyleKeyValue);\n\n  this.key = key;\n  this.value = value;\n  this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n  this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n  this.value = this.value.replace(/;/, '');\n};\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction getType(target) {\n  /** @type {?} */\n  var what = typeof target;\n\n  if (what === 'object') {\n    return target.constructor === Array ? 'array' : target.constructor === Set ? 'set' : 'object';\n  }\n\n  return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n * @param {?} source\n * @param {?=} delimiter\n * @return {?}\n */\n\n\nfunction buildRawList(source) {\n  var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ';';\n  return String(source).trim().split(delimiter).map(\n  /**\n  * @param {?} val\n  * @return {?}\n  */\n  function (val) {\n    return val.trim();\n  }).filter(\n  /**\n  * @param {?} val\n  * @return {?}\n  */\n  function (val) {\n    return val !== '';\n  });\n}\n/**\n * Convert array of key:value strings to a iterable map object\n * @param {?} styles\n * @param {?=} sanitize\n * @return {?}\n */\n\n\nfunction buildMapFromList(styles, sanitize) {\n  /** @type {?} */\n  var sanitizeValue =\n  /**\n  * @param {?} it\n  * @return {?}\n  */\n  function sanitizeValue(it) {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n\n    return it;\n  };\n\n  return styles.map(stringToKeyValue).filter(\n  /**\n  * @param {?} entry\n  * @return {?}\n  */\n  function (entry) {\n    return !!entry;\n  }).map(sanitizeValue).reduce(keyValuesToMap,\n  /** @type {?} */\n  {});\n}\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n * @param {?} source\n * @param {?=} sanitize\n * @return {?}\n */\n\n\nfunction buildMapFromSet(source, sanitize) {\n  /** @type {?} */\n  var list = [];\n\n  if (getType(source) === 'set') {\n    /** @type {?} */\n    source.forEach(\n    /**\n    * @param {?} entry\n    * @return {?}\n    */\n    function (entry) {\n      return list.push(entry);\n    });\n  } else {\n    Object.keys(source).forEach(\n    /**\n    * @param {?} key\n    * @return {?}\n    */\n    function (key) {\n      list.push(\"\".concat(key, \":\").concat(\n      /** @type {?} */\n      source[key]));\n    });\n  }\n\n  return buildMapFromList(list, sanitize);\n}\n/**\n * Convert 'key:value' -> [key, value]\n * @param {?} it\n * @return {?}\n */\n\n\nfunction stringToKeyValue(it) {\n  var _it$split = it.split(':'),\n      _it$split2 = _toArray(_it$split),\n      key = _it$split2[0],\n      vals = _it$split2.slice(1);\n\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n/**\n * Convert [ [key,value] ] -> { key : value }\n * @param {?} map\n * @param {?} entry\n * @return {?}\n */\n\n\nfunction keyValuesToMap(map, entry) {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n\n  return map;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/style/style.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar StyleDirective = /*#__PURE__*/function (_BaseDirective4) {\n  _inherits(StyleDirective, _BaseDirective4);\n\n  var _super9 = _createSuper(StyleDirective);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} styler\n   * @param {?} marshal\n   * @param {?} sanitizer\n   * @param {?} differs\n   * @param {?} renderer2\n   * @param {?} ngStyleInstance\n   * @param {?} serverLoaded\n   * @param {?} platformId\n   */\n  function StyleDirective(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n    var _this9;\n\n    _classCallCheck(this, StyleDirective);\n\n    _this9 = _super9.call(this, elementRef,\n    /** @type {?} */\n    null, styler, marshal);\n    _this9.sanitizer = sanitizer;\n    _this9.ngStyleInstance = ngStyleInstance;\n    _this9.DIRECTIVE_KEY = 'ngStyle';\n\n    if (!_this9.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      _this9.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n    }\n\n    _this9.init();\n    /** @type {?} */\n\n\n    var styles = _this9.nativeElement.getAttribute('style') || '';\n    _this9.fallbackStyles = _this9.buildStyleMap(styles);\n    _this9.isServer = serverLoaded && isPlatformServer(platformId);\n    return _this9;\n  }\n  /**\n   * Add generated styles\n   * @protected\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(StyleDirective, [{\n    key: \"updateWithValue\",\n    value: function updateWithValue(value) {\n      /** @type {?} */\n      var styles = this.buildStyleMap(value);\n      this.ngStyleInstance.ngStyle = Object.assign(Object.assign({}, this.fallbackStyles), styles);\n\n      if (this.isServer) {\n        this.applyStyleToElement(styles);\n      }\n\n      this.ngStyleInstance.ngDoCheck();\n    }\n    /**\n     * Remove generated styles\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearStyles\",\n    value: function clearStyles() {\n      this.ngStyleInstance.ngStyle = this.fallbackStyles;\n      this.ngStyleInstance.ngDoCheck();\n    }\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     * @protected\n     * @param {?} styles\n     * @return {?}\n     */\n\n  }, {\n    key: \"buildStyleMap\",\n    value: function buildStyleMap(styles) {\n      var _this10 = this;\n\n      // Always safe-guard (aka sanitize) style property values\n\n      /** @type {?} */\n      var sanitizer =\n      /**\n      * @param {?} val\n      * @return {?}\n      */\n      function sanitizer(val) {\n        return _this10.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n      };\n\n      if (styles) {\n        switch (getType(styles)) {\n          case 'string':\n            return buildMapFromList$1(buildRawList(styles), sanitizer);\n\n          case 'array':\n            return buildMapFromList$1(\n            /** @type {?} */\n            styles, sanitizer);\n\n          case 'set':\n            return buildMapFromSet(styles, sanitizer);\n\n          default:\n            return buildMapFromSet(styles, sanitizer);\n        }\n      }\n\n      return {};\n    } // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.ngStyleInstance.ngDoCheck();\n    }\n  }]);\n\n  return StyleDirective;\n}(BaseDirective2);\n\nStyleDirective.ɵfac = function StyleDirective_Factory(t) {\n  return new (t || StyleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleUtils), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MediaMarshaller), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgStyle, 10), ɵngcc0.ɵɵdirectiveInject(SERVER_TOKEN), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nStyleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: StyleDirective,\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nStyleDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: StyleUtils\n  }, {\n    type: MediaMarshaller\n  }, {\n    type: DomSanitizer\n  }, {\n    type: KeyValueDiffers\n  }, {\n    type: Renderer2\n  }, {\n    type: NgStyle,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Inject,\n      args: [SERVER_TOKEN]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StyleDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.StyleUtils\n    }, {\n      type: ɵngcc1.MediaMarshaller\n    }, {\n      type: ɵngcc3.DomSanitizer\n    }, {\n      type: ɵngcc0.KeyValueDiffers\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc2.NgStyle,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/** @type {?} */\n\n\nvar inputs$3 = ['ngStyle', 'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl', 'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl', 'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'];\n/** @type {?} */\n\nvar selector$3 = \"\\n  [ngStyle],\\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n\";\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n\nvar DefaultStyleDirective = /*#__PURE__*/function (_StyleDirective) {\n  _inherits(DefaultStyleDirective, _StyleDirective);\n\n  var _super10 = _createSuper(DefaultStyleDirective);\n\n  function DefaultStyleDirective() {\n    var _this11;\n\n    _classCallCheck(this, DefaultStyleDirective);\n\n    _this11 = _super10.apply(this, arguments);\n    _this11.inputs = inputs$3;\n    return _this11;\n  }\n\n  return DefaultStyleDirective;\n}(StyleDirective);\n\nDefaultStyleDirective.ɵfac = function DefaultStyleDirective_Factory(t) {\n  return ɵDefaultStyleDirective_BaseFactory(t || DefaultStyleDirective);\n};\n\nDefaultStyleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DefaultStyleDirective,\n  selectors: [[\"\", \"ngStyle\", \"\"], [\"\", \"ngStyle.xs\", \"\"], [\"\", \"ngStyle.sm\", \"\"], [\"\", \"ngStyle.md\", \"\"], [\"\", \"ngStyle.lg\", \"\"], [\"\", \"ngStyle.xl\", \"\"], [\"\", \"ngStyle.lt-sm\", \"\"], [\"\", \"ngStyle.lt-md\", \"\"], [\"\", \"ngStyle.lt-lg\", \"\"], [\"\", \"ngStyle.lt-xl\", \"\"], [\"\", \"ngStyle.gt-xs\", \"\"], [\"\", \"ngStyle.gt-sm\", \"\"], [\"\", \"ngStyle.gt-md\", \"\"], [\"\", \"ngStyle.gt-lg\", \"\"]],\n  inputs: {\n    ngStyle: \"ngStyle\",\n    \"ngStyle.xs\": \"ngStyle.xs\",\n    \"ngStyle.sm\": \"ngStyle.sm\",\n    \"ngStyle.md\": \"ngStyle.md\",\n    \"ngStyle.lg\": \"ngStyle.lg\",\n    \"ngStyle.xl\": \"ngStyle.xl\",\n    \"ngStyle.lt-sm\": \"ngStyle.lt-sm\",\n    \"ngStyle.lt-md\": \"ngStyle.lt-md\",\n    \"ngStyle.lt-lg\": \"ngStyle.lt-lg\",\n    \"ngStyle.lt-xl\": \"ngStyle.lt-xl\",\n    \"ngStyle.gt-xs\": \"ngStyle.gt-xs\",\n    \"ngStyle.gt-sm\": \"ngStyle.gt-sm\",\n    \"ngStyle.gt-md\": \"ngStyle.gt-md\",\n    \"ngStyle.gt-lg\": \"ngStyle.gt-lg\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵDefaultStyleDirective_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DefaultStyleDirective);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultStyleDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$3,\n      inputs: inputs$3\n    }]\n  }], null, null);\n})();\n/**\n * Build a styles map from a list of styles, while sanitizing bad values first\n * @param {?} styles\n * @param {?=} sanitize\n * @return {?}\n */\n\n\nfunction buildMapFromList$1(styles, sanitize) {\n  /** @type {?} */\n  var sanitizeValue =\n  /**\n  * @param {?} it\n  * @return {?}\n  */\n  function sanitizeValue(it) {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n\n    return it;\n  };\n\n  return styles.map(stringToKeyValue).filter(\n  /**\n  * @param {?} entry\n  * @return {?}\n  */\n  function (entry) {\n    return !!entry;\n  }).map(sanitizeValue).reduce(keyValuesToMap,\n  /** @type {?} */\n  {});\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar ALL_DIRECTIVES = [DefaultShowHideDirective, DefaultClassDirective, DefaultStyleDirective, DefaultImgSrcDirective];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\nvar ExtendedModule = function ExtendedModule() {\n  _classCallCheck(this, ExtendedModule);\n};\n\nExtendedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ExtendedModule\n});\nExtendedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ExtendedModule_Factory(t) {\n    return new (t || ExtendedModule)();\n  },\n  imports: [[CoreModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ExtendedModule, {\n    declarations: function declarations() {\n      return [DefaultShowHideDirective, DefaultClassDirective, DefaultStyleDirective, DefaultImgSrcDirective];\n    },\n    imports: function imports() {\n      return [CoreModule];\n    },\n    exports: function exports() {\n      return [DefaultShowHideDirective, DefaultClassDirective, DefaultStyleDirective, DefaultImgSrcDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ExtendedModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CoreModule],\n      declarations: [].concat(ALL_DIRECTIVES),\n      exports: [].concat(ALL_DIRECTIVES)\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: extended/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ExtendedModule, ClassDirective, DefaultClassDirective, ImgSrcStyleBuilder, ImgSrcDirective, DefaultImgSrcDirective, ShowHideStyleBuilder, ShowHideDirective, DefaultShowHideDirective, StyleDirective, DefaultStyleDirective };","map":{"version":3,"sources":["../../../src/lib/extended/img-src/img-src.ts","../../../src/lib/extended/class/class.ts","../../../src/lib/extended/show-hide/show-hide.ts","../../../src/lib/extended/style/style-transforms.ts","../../../src/lib/extended/style/style.ts","../../../src/lib/extended/module.ts"],"names":["inputs","selector","buildMapFromList"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\n@Directive()\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ImgSrcStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\n@Directive()\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              iterableDiffers: IterableDiffers,\n              keyValueDiffers: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n  isServer: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none'};\n  }\n}\n\n@Directive()\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original DOM Element CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ShowHideStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    const isServer = isPlatformServer(this.platformId);\n    this.addStyles(value ? 'true' : 'false', {display: this.display, isServer});\n    if (isServer && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n@Directive()\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              protected sanitizer: DomSanitizer,\n              differs: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n"]},"metadata":{},"sourceType":"module"}